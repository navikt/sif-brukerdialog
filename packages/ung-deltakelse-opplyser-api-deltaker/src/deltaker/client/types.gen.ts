// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: 'https://ung-deltakelse-opplyser.intern.dev.nav.no' | (string & {});
};

export type ProblemDetail = {
    type?: string;
    title?: string;
    status?: number;
    detail?: string;
    instance?: string;
    properties?: {
        [key: string]: unknown;
    };
};

export type ArbeidOgFrilansRegisterInntektDto = {
    inntekt: number;
    arbeidsgiver: string;
    arbeidsgiverNavn?: string;
};

export type BekreftelseDto = {
    harUttalelse: boolean;
    uttalelseFraBruker?: string;
};

export type DeltakelseKomposittDto = {
    id?: string;
    deltaker: DeltakerDto;
    fraOgMed: string;
    tilOgMed?: string;
    søktTidspunkt?: string;
    oppgaver: OppgaveDto[];
};

export type DeltakerDto = {
    id?: string;
    deltakerIdent: string;
};

export type EndretSluttdatoDataDto = OppgavetypeDataDto & {
    nySluttdato: string;
    forrigeSluttdato?: string;
};

export type EndretStartdatoDataDto = OppgavetypeDataDto & {
    nyStartdato: string;
    forrigeStartdato: string;
};

export type InntektsrapporteringOppgavetypeDataDto = OppgavetypeDataDto & {
    fraOgMed: string;
    tilOgMed: string;
    rapportertInntekt?: RapportertInntektPeriodeinfoDto;
};

export type KontrollerRegisterinntektOppgavetypeDataDto = OppgavetypeDataDto & {
    fraOgMed: string;
    tilOgMed: string;
    registerinntekt: RegisterinntektDto;
};

export type OppgaveDto = {
    oppgaveReferanse: string;
    oppgavetype: Oppgavetype;
    oppgavetypeData:
        | EndretSluttdatoDataDto
        | EndretStartdatoDataDto
        | InntektsrapporteringOppgavetypeDataDto
        | KontrollerRegisterinntektOppgavetypeDataDto
        | SøkYtelseOppgavetypeDataDto;
    bekreftelse?: BekreftelseDto;
    status: OppgaveStatus;
    opprettetDato: string;
    løstDato?: string;
    åpnetDato?: string;
    lukketDato?: string;
    frist?: string;
};

export enum OppgaveStatus {
    LØST = 'LØST',
    ULØST = 'ULØST',
    AVBRUTT = 'AVBRUTT',
    UTLØPT = 'UTLØPT',
    LUKKET = 'LUKKET',
}

export enum Oppgavetype {
    BEKREFT_ENDRET_STARTDATO = 'BEKREFT_ENDRET_STARTDATO',
    BEKREFT_ENDRET_SLUTTDATO = 'BEKREFT_ENDRET_SLUTTDATO',
    BEKREFT_AVVIK_REGISTERINNTEKT = 'BEKREFT_AVVIK_REGISTERINNTEKT',
    RAPPORTER_INNTEKT = 'RAPPORTER_INNTEKT',
    SØK_YTELSE = 'SØK_YTELSE',
}

export type OppgavetypeDataDto = unknown;

export type RapportertInntektPeriodeinfoDto = {
    fraOgMed: string;
    tilOgMed: string;
    arbeidstakerOgFrilansInntekt?: number;
};

export type RegisterinntektDto = {
    arbeidOgFrilansInntekter: ArbeidOgFrilansRegisterInntektDto[];
    ytelseInntekter: YtelseRegisterInntektDto[];
    totalInntektArbeidOgFrilans: number;
    totalInntektYtelse: number;
    totalInntekt: number;
};

export type SøkYtelseOppgavetypeDataDto = OppgavetypeDataDto & {
    fomDato: string;
};

export type YtelseRegisterInntektDto = {
    inntekt: number;
    ytelsetype: YtelseType;
};

export enum YtelseType {
    SYKEPENGER = 'SYKEPENGER',
    OMSORGSPENGER = 'OMSORGSPENGER',
    PLEIEPENGER_SYKT_BARN = 'PLEIEPENGER_SYKT_BARN',
    PLEIEPENGER_LIVETS_SLUTTFASE = 'PLEIEPENGER_LIVETS_SLUTTFASE',
    OPPLAERINGSPENGER = 'OPPLAERINGSPENGER',
}

export type KontonummerDto = {
    harKontonummer: boolean;
    kontonummer?: string;
};

export type MarkerDeltakelseSomSøktData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/deltakelse/register/{id}/marker-har-sokt';
};

export type MarkerDeltakelseSomSøktErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerDeltakelseSomSøktError = MarkerDeltakelseSomSøktErrors[keyof MarkerDeltakelseSomSøktErrors];

export type MarkerDeltakelseSomSøktResponses = {
    /**
     * OK
     */
    200: DeltakelseKomposittDto;
};

export type MarkerDeltakelseSomSøktResponse = MarkerDeltakelseSomSøktResponses[keyof MarkerDeltakelseSomSøktResponses];

export type HentKontonummerData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/deltaker/hent-kontonummer';
};

export type HentKontonummerErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentKontonummerError = HentKontonummerErrors[keyof HentKontonummerErrors];

export type HentKontonummerResponses = {
    /**
     * OK
     */
    200: KontonummerDto;
};

export type HentKontonummerResponse = HentKontonummerResponses[keyof HentKontonummerResponses];

export type HentDeltakersOppgaveData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}';
};

export type HentDeltakersOppgaveErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentDeltakersOppgaveError = HentDeltakersOppgaveErrors[keyof HentDeltakersOppgaveErrors];

export type HentDeltakersOppgaveResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type HentDeltakersOppgaveResponse = HentDeltakersOppgaveResponses[keyof HentDeltakersOppgaveResponses];

export type MarkerOppgaveSomLøstData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/løst';
};

export type MarkerOppgaveSomLøstErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomLøstError = MarkerOppgaveSomLøstErrors[keyof MarkerOppgaveSomLøstErrors];

export type MarkerOppgaveSomLøstResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomLøstResponse = MarkerOppgaveSomLøstResponses[keyof MarkerOppgaveSomLøstResponses];

export type MarkerOppgaveSomLukketData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/lukk';
};

export type MarkerOppgaveSomLukketErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomLukketError = MarkerOppgaveSomLukketErrors[keyof MarkerOppgaveSomLukketErrors];

export type MarkerOppgaveSomLukketResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomLukketResponse = MarkerOppgaveSomLukketResponses[keyof MarkerOppgaveSomLukketResponses];

export type MarkerOppgaveSomÅpnetData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/apnet';
};

export type MarkerOppgaveSomÅpnetErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomÅpnetError = MarkerOppgaveSomÅpnetErrors[keyof MarkerOppgaveSomÅpnetErrors];

export type MarkerOppgaveSomÅpnetResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomÅpnetResponse = MarkerOppgaveSomÅpnetResponses[keyof MarkerOppgaveSomÅpnetResponses];

export type HentAlleMineDeltakelserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/deltakelse/register/hent/alle';
};

export type HentAlleMineDeltakelserErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentAlleMineDeltakelserError = HentAlleMineDeltakelserErrors[keyof HentAlleMineDeltakelserErrors];

export type HentAlleMineDeltakelserResponses = {
    /**
     * OK
     */
    200: DeltakelseKomposittDto[];
};

export type HentAlleMineDeltakelserResponse = HentAlleMineDeltakelserResponses[keyof HentAlleMineDeltakelserResponses];
