// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zProblemDetail = z.object({
    type: z.string().url().optional(),
    title: z.string().optional(),
    status: z.number().int().optional(),
    detail: z.string().optional(),
    instance: z.string().url().optional(),
    properties: z.object({}).optional(),
});

export const zEnkeltdag = z.object({
    dato: z.string().date(),
    tid: z.string(),
});

export const zArbeidIPeriode = z.object({
    jobberIPerioden: z.enum(['SOM_VANLIG', 'REDUSERT', 'HELT_FRAVÆR']).optional(),
    enkeltdager: z.array(zEnkeltdag).optional(),
});

export const zArbeidsforholdOlp = z.object({
    jobberNormaltTimer: z.number(),
    arbeidIPeriode: zArbeidIPeriode,
});

export const zArbeidsgiverOlp = z.object({
    organisasjonsnummer: z.string().optional(),
    navn: z.string().optional(),
    erAnsatt: z.boolean().optional(),
    sluttetFørSøknadsperiode: z.boolean().optional(),
    arbeidsforhold: zArbeidsforholdOlp.optional(),
});

export const zBarnDetaljer = z.object({
    norskIdentifikator: z.string().length(11).optional(),
    fødselsdato: z.string().date().optional(),
    aktørId: z.string().optional(),
    navn: z.string().min(1),
    getårsakManglerIdentitetsnummer: z.enum(['NYFØDT', 'BARNET_BOR_I_UTLANDET', 'ANNET']).optional(),
    relasjonTilBarnet: z.enum(['MOR', 'MEDMOR', 'FAR', 'FOSTERFORELDER', 'ANNET']).optional(),
    relasjonTilBarnetBeskrivelse: z.string().optional(),
    fødselsattestVedleggUrls: z.array(z.string()).optional(),
});

export const zBosted = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    landkode: z.string().min(1),
    landnavn: z.string(),
});

export const zEttersendingAvVedlegg = z.object({
    skalEttersendeVedlegg: z.boolean(),
    vedleggSomSkalEttersendes: z.array(z.enum(['LEGEERKLÆRING', 'KURSINFORMASJON', 'ANNET'])).optional(),
    isValid: z.boolean(),
});

export const zFerieuttak = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
});

export const zFerieuttakIPerioden = z.object({
    skalTaUtFerieIPerioden: z.boolean(),
    ferieuttak: z.array(zFerieuttak),
});

export const zFrilansOlp = z.object({
    startdato: z.string().date(),
    sluttdato: z.string().date().optional(),
    jobberFortsattSomFrilans: z.boolean(),
    arbeidsforhold: zArbeidsforholdOlp.optional(),
    harHattInntektSomFrilanser: z.boolean(),
});

export const zKursholder = z.object({
    uuid: z.string().uuid().optional(),
    navn: z.string().min(1),
});

export const zReise = z.object({
    reiserUtenforKursdager: z.boolean(),
    reisedager: z.array(z.string().date()).optional(),
    reisedagerBeskrivelse: z.string().optional(),
});

export const zKurs = z.object({
    kursholder: zKursholder,
    kursperioder: z.array(z.string()).min(1),
    reise: zReise,
});

export const zLand = z.object({
    landkode: z.string().min(1),
    landnavn: z.string().min(1),
});

export const zMedlemskap = z.object({
    harBoddIUtlandetSiste12Mnd: z.boolean().optional(),
    utenlandsoppholdSiste12Mnd: z.array(zBosted),
    skalBoIUtlandetNeste12Mnd: z.boolean().optional(),
    utenlandsoppholdNeste12Mnd: z.array(zBosted),
});

export const zUtenlandsopphold = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    landkode: z.string().min(1),
    landnavn: z.string().min(1),
    isValid: z.boolean(),
});

export const zUtenlandsoppholdIPerioden = z.object({
    skalOppholdeSegIUtlandetIPerioden: z.boolean(),
    opphold: z.array(zUtenlandsopphold),
});

export const zOpptjeningIUtlandet = z.object({
    navn: z.string(),
    opptjeningType: z.enum(['ARBEIDSTAKER', 'FRILANSER']),
    land: zLand,
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
});

export const zUtenlandskNæring = z.object({
    næringstype: z.enum(['FISKE', 'JORDBRUK_SKOGBRUK', 'DAGMAMMA', 'ANNEN']),
    navnPåVirksomheten: z.string(),
    land: zLand,
    organisasjonsnummer: z.string().optional(),
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date().optional(),
});

export const zYrkesaktivSisteTreFerdigliknedeArene = z.object({
    oppstartsdato: z.string().date().optional(),
});

export const zVarigEndring = z.object({
    dato: z.string().date().optional(),
    inntektEtterEndring: z.number().int().optional(),
    forklaring: z.string().optional(),
});

export const zRegnskapsfører = z.object({
    navn: z.string().optional(),
    telefon: z.string().optional(),
});

export const zVirksomhet = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date().optional(),
    næringstype: z.enum(['FISKE', 'JORDBRUK_SKOGBRUK', 'DAGMAMMA', 'ANNEN']),
    fiskerErPåBladB: z.boolean().optional(),
    næringsinntekt: z.number().int().optional(),
    navnPåVirksomheten: z.string(),
    organisasjonsnummer: z.string().min(0).max(20).optional(),
    registrertINorge: z.boolean(),
    registrertIUtlandet: zLand.optional(),
    yrkesaktivSisteTreFerdigliknedeÅrene: zYrkesaktivSisteTreFerdigliknedeArene.optional(),
    varigEndring: zVarigEndring.optional(),
    regnskapsfører: zRegnskapsfører.optional(),
    erNyoppstartet: z.boolean(),
    harFlereAktiveVirksomheter: z.boolean(),
});

export const zSelvstendigNæringsdrivendeOlp = z.object({
    virksomhet: zVirksomhet,
    arbeidsforhold: zArbeidsforholdOlp,
});

export const zStønadGodtgjørelse = z.object({
    mottarStønadGodtgjørelse: z.boolean().optional(),
    startdato: z.string().date().optional(),
    sluttdato: z.string().date().optional(),
});

export const zOpplæringspengerSøknad = z.object({
    newVersion: z.boolean().optional(),
    apiDataVersjon: z.string().optional(),
    språk: z.enum(['nb', 'nn']),
    søkerNorskIdent: z.string().optional(),
    barn: zBarnDetaljer,
    arbeidsgivere: z.array(zArbeidsgiverOlp),
    vedlegg: z.array(z.string()),
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    medlemskap: zMedlemskap,
    utenlandsoppholdIPerioden: zUtenlandsoppholdIPerioden.optional(),
    ferieuttakIPerioden: zFerieuttakIPerioden.optional(),
    opptjeningIUtlandet: z.array(zOpptjeningIUtlandet),
    utenlandskNæring: z.array(zUtenlandskNæring),
    harBekreftetOpplysninger: z.boolean(),
    harForståttRettigheterOgPlikter: z.boolean(),
    frilans: zFrilansOlp.optional(),
    selvstendigNæringsdrivende: zSelvstendigNæringsdrivendeOlp.optional(),
    stønadGodtgjørelse: zStønadGodtgjørelse.optional(),
    harVærtEllerErVernepliktig: z.boolean().optional(),
    dataBruktTilUtledningAnnetData: z.string().optional(),
    ettersendingAvVedlegg: zEttersendingAvVedlegg.optional(),
    kurs: zKurs,
});

export const zSøker = z.object({
    aktørId: z.string(),
    fødselsdato: z.string().date(),
    fødselsnummer: z.string(),
    fornavn: z.string().optional(),
    mellomnavn: z.string().optional(),
    etternavn: z.string().optional(),
});

export const zBarnOppslag = z.object({
    fødselsdato: z.string().date(),
    fornavn: z.string(),
    mellomnavn: z.string().optional(),
    etternavn: z.string(),
    aktørId: z.string(),
});

export const zBarnOppslagListe = z.object({
    barn: z.array(zBarnOppslag),
});

export const zOrganisasjonDto = z.object({
    organisasjonsnummer: z.string(),
    navn: z.string().optional(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional(),
});

export const zPrivatArbeidsgiverDto = z.object({
    offentligIdent: z.string(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional(),
});

export const zFrilansoppdragDto = z.object({
    type: z.string(),
    organisasjonsnummer: z.string().optional(),
    navn: z.string().optional(),
    offentligIdent: z.string().optional(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional(),
});

export const zArbeidsgivereDto = z.object({
    organisasjoner: z.array(zOrganisasjonDto),
    privateArbeidsgivere: z.array(zPrivatArbeidsgiverDto).optional(),
    frilansoppdrag: z.array(zFrilansoppdragDto).optional(),
});

export const zDeleteMellomlagringData = z.object({
    body: z.never().optional(),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.never().optional(),
});

export const zGetMellomlagringData = z.object({
    body: z.never().optional(),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.never().optional(),
});

/**
 * OK
 */
export const zGetMellomlagringResponse = z.string();

export const zCreateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.never().optional(),
});

export const zUpdateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.never().optional(),
});

export const zLagreVedleggData = z.object({
    body: z
        .object({
            vedlegg: z.string(),
        })
        .optional(),
    path: z.never().optional(),
    query: z.never().optional(),
});

export const zInnsendingOpplæringspengerSøknadData = z.object({
    body: zOpplæringspengerSøknad,
    path: z.never().optional(),
    query: z.never().optional(),
    headers: z.object({
        'X-Brukerdialog-Git-Sha': z.string(),
    }),
});

export const zSlettVedleggData = z.object({
    body: z.never().optional(),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.never().optional(),
});

/**
 * No Content
 */
export const zSlettVedleggResponse = z.void();

export const zHentVedleggData = z.object({
    body: z.never().optional(),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.never().optional(),
});

/**
 * OK
 */
export const zHentVedleggResponse = z.string();

export const zHentSøkerData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.never().optional(),
});

/**
 * OK
 */
export const zHentSøkerResponse = zSøker;

export const zHentBarnData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.never().optional(),
});

/**
 * OK
 */
export const zHentBarnResponse = zBarnOppslagListe;

export const zHentArbeidsgivereData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.object({
        fra_og_med: z.string(),
        til_og_med: z.string(),
        inkluderAlleAnsettelsesperioder: z.boolean().optional(),
        frilansoppdrag: z.boolean().optional().default(false),
        private_arbeidsgivere: z.boolean().optional().default(false),
    }),
});

/**
 * OK
 */
export const zHentArbeidsgivereResponse = zArbeidsgivereDto;
