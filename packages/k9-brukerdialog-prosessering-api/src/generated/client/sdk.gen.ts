// This file is auto-generated by @hey-api/openapi-ts

import { type Client, formDataBodySerializer, type Options as Options2, type TDataShape } from './client';
import { client } from './client.gen';
import type {
    CreateMellomlagringData,
    CreateMellomlagringErrors,
    CreateMellomlagringResponses,
    DeleteMellomlagringData,
    DeleteMellomlagringErrors,
    DeleteMellomlagringResponses,
    GetMellomlagringData,
    GetMellomlagringErrors,
    GetMellomlagringResponses,
    HentArbeidsgivereData,
    HentArbeidsgivereErrors,
    HentArbeidsgivereResponses,
    HentBarnData,
    HentBarnErrors,
    HentBarnResponses,
    HentSøkerData,
    HentSøkerErrors,
    HentSøkerResponses,
    HentVedleggData,
    HentVedleggErrors,
    HentVedleggResponses,
    InnsendingEndringsmeldingData,
    InnsendingEndringsmeldingErrors,
    InnsendingEndringsmeldingResponses,
    InnsendingEttersendelseData,
    InnsendingEttersendelseErrors,
    InnsendingEttersendelseResponses,
    InnsendingOmsorgsdagerAleneOmOmsorgenSøknadData,
    InnsendingOmsorgsdagerAleneOmOmsorgenSøknadErrors,
    InnsendingOmsorgsdagerAleneOmOmsorgenSøknadResponses,
    InnsendingOmsorgspengerKroniskSyktBarnSøknadData,
    InnsendingOmsorgspengerKroniskSyktBarnSøknadErrors,
    InnsendingOmsorgspengerKroniskSyktBarnSøknadResponses,
    InnsendingOmsorgspengerMidlertidigAleneSøknadData,
    InnsendingOmsorgspengerMidlertidigAleneSøknadErrors,
    InnsendingOmsorgspengerMidlertidigAleneSøknadResponses,
    InnsendingOmsorgspengerutbetalingArbeidstakerSøknadData,
    InnsendingOmsorgspengerutbetalingArbeidstakerSøknadErrors,
    InnsendingOmsorgspengerutbetalingArbeidstakerSøknadResponses,
    InnsendingOmsorgspengerutbetalingSnfSøknadData,
    InnsendingOmsorgspengerutbetalingSnfSøknadErrors,
    InnsendingOmsorgspengerutbetalingSnfSøknadResponses,
    InnsendingOpplæringspengerSøknadData,
    InnsendingOpplæringspengerSøknadErrors,
    InnsendingOpplæringspengerSøknadResponses,
    InnsendingPleiepengerILivetsSluttfaseSøknadData,
    InnsendingPleiepengerILivetsSluttfaseSøknadErrors,
    InnsendingPleiepengerILivetsSluttfaseSøknadResponses,
    InnsendingPleiepengerSyktBarnSøknadData,
    InnsendingPleiepengerSyktBarnSøknadErrors,
    InnsendingPleiepengerSyktBarnSøknadResponses,
    InnsendingUngdomsytelsesøknadData,
    InnsendingUngdomsytelsesøknadErrors,
    InnsendingUngdomsytelsesøknadResponses,
    InntektrapporteringData,
    InntektrapporteringErrors,
    InntektrapporteringResponses,
    LagPdfData,
    LagPdfErrors,
    LagPdfResponses,
    LagreVedleggData,
    LagreVedleggErrors,
    LagreVedleggResponses,
    OppgavebekreftelseData,
    OppgavebekreftelseErrors,
    OppgavebekreftelseResponses,
    SlettVedleggData,
    SlettVedleggErrors,
    SlettVedleggResponses,
    UpdateMellomlagringData,
    UpdateMellomlagringErrors,
    UpdateMellomlagringResponses,
    ValiderFriteksfeltData,
    ValiderFriteksfeltErrors,
    ValiderFriteksfeltResponses,
} from './types.gen';
import {
    zCreateMellomlagringData,
    zDeleteMellomlagringData,
    zGetMellomlagringData,
    zGetMellomlagringResponse,
    zHentArbeidsgivereData,
    zHentArbeidsgivereResponse,
    zHentBarnData,
    zHentBarnResponse,
    zHentSøkerData,
    zHentSøkerResponse,
    zHentVedleggData,
    zHentVedleggResponse,
    zInnsendingEndringsmeldingData,
    zInnsendingEttersendelseData,
    zInnsendingOmsorgsdagerAleneOmOmsorgenSøknadData,
    zInnsendingOmsorgspengerKroniskSyktBarnSøknadData,
    zInnsendingOmsorgspengerMidlertidigAleneSøknadData,
    zInnsendingOmsorgspengerutbetalingArbeidstakerSøknadData,
    zInnsendingOmsorgspengerutbetalingSnfSøknadData,
    zInnsendingOpplæringspengerSøknadData,
    zInnsendingPleiepengerILivetsSluttfaseSøknadData,
    zInnsendingPleiepengerSyktBarnSøknadData,
    zInnsendingUngdomsytelsesøknadData,
    zInntektrapporteringData,
    zLagPdfData,
    zLagPdfResponse,
    zLagreVedleggData,
    zOppgavebekreftelseData,
    zSlettVedleggData,
    zSlettVedleggResponse,
    zUpdateMellomlagringData,
    zValiderFriteksfeltData,
} from './zod.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<
    TData,
    ThrowOnError
> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class MellomlagringController {
    public static deleteMellomlagring<ThrowOnError extends boolean = true>(
        options: Options<DeleteMellomlagringData, ThrowOnError>,
    ) {
        return (options.client ?? client).delete<DeleteMellomlagringResponses, DeleteMellomlagringErrors, ThrowOnError>(
            {
                requestValidator: async (data) => {
                    return await zDeleteMellomlagringData.parseAsync(data);
                },
                security: [
                    {
                        scheme: 'bearer',
                        type: 'http',
                    },
                ],
                url: '/mellomlagring/{ytelse}',
                ...options,
            },
        );
    }

    public static getMellomlagring<ThrowOnError extends boolean = true>(
        options: Options<GetMellomlagringData, ThrowOnError>,
    ) {
        return (options.client ?? client).get<GetMellomlagringResponses, GetMellomlagringErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zGetMellomlagringData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zGetMellomlagringResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/mellomlagring/{ytelse}',
            ...options,
        });
    }

    public static createMellomlagring<ThrowOnError extends boolean = true>(
        options: Options<CreateMellomlagringData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<CreateMellomlagringResponses, CreateMellomlagringErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zCreateMellomlagringData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/mellomlagring/{ytelse}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    public static updateMellomlagring<ThrowOnError extends boolean = true>(
        options: Options<UpdateMellomlagringData, ThrowOnError>,
    ) {
        return (options.client ?? client).put<UpdateMellomlagringResponses, UpdateMellomlagringErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zUpdateMellomlagringData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/mellomlagring/{ytelse}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class VedleggController {
    public static lagreVedlegg<ThrowOnError extends boolean = true>(options?: Options<LagreVedleggData, ThrowOnError>) {
        return (options?.client ?? client).post<LagreVedleggResponses, LagreVedleggErrors, ThrowOnError>({
            ...formDataBodySerializer,
            requestValidator: async (data) => {
                return await zLagreVedleggData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/vedlegg',
            ...options,
            headers: {
                'Content-Type': null,
                ...options?.headers,
            },
        });
    }

    public static slettVedlegg<ThrowOnError extends boolean = true>(options: Options<SlettVedleggData, ThrowOnError>) {
        return (options.client ?? client).delete<SlettVedleggResponses, SlettVedleggErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zSlettVedleggData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zSlettVedleggResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/vedlegg/{vedleggId}',
            ...options,
        });
    }

    public static hentVedlegg<ThrowOnError extends boolean = true>(options: Options<HentVedleggData, ThrowOnError>) {
        return (options.client ?? client).get<HentVedleggResponses, HentVedleggErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zHentVedleggData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zHentVedleggResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/vedlegg/{vedleggId}',
            ...options,
        });
    }
}

export class FeltValideringController {
    public static validerFriteksfelt<ThrowOnError extends boolean = true>(
        options: Options<ValiderFriteksfeltData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<ValiderFriteksfeltResponses, ValiderFriteksfeltErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zValiderFriteksfeltData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/valider/friteksfelt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class UngdomsytelseController {
    public static innsendingUngdomsytelsesøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingUngdomsytelsesøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingUngdomsytelsesøknadResponses,
            InnsendingUngdomsytelsesøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingUngdomsytelsesøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/ungdomsytelse/soknad/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    public static oppgavebekreftelse<ThrowOnError extends boolean = true>(
        options: Options<OppgavebekreftelseData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<OppgavebekreftelseResponses, OppgavebekreftelseErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zOppgavebekreftelseData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/ungdomsytelse/oppgavebekreftelse/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    public static inntektrapportering<ThrowOnError extends boolean = true>(
        options: Options<InntektrapporteringData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<InntektrapporteringResponses, InntektrapporteringErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zInntektrapporteringData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/ungdomsytelse/inntektsrapportering/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class PleiepengerSyktBarnController {
    public static innsendingPleiepengerSyktBarnSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingPleiepengerSyktBarnSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingPleiepengerSyktBarnSøknadResponses,
            InnsendingPleiepengerSyktBarnSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingPleiepengerSyktBarnSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/pleiepenger-sykt-barn/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class EndringsmeldingController {
    public static innsendingEndringsmelding<ThrowOnError extends boolean = true>(
        options: Options<InnsendingEndringsmeldingData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingEndringsmeldingResponses,
            InnsendingEndringsmeldingErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingEndringsmeldingData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/pleiepenger-sykt-barn/endringsmelding/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class PleiepengerLivetsSluttfaseController {
    public static innsendingPleiepengerILivetsSluttfaseSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingPleiepengerILivetsSluttfaseSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingPleiepengerILivetsSluttfaseSøknadResponses,
            InnsendingPleiepengerILivetsSluttfaseSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingPleiepengerILivetsSluttfaseSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/pleiepenger-livets-sluttfase/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class PdfController {
    public static lagPdf<ThrowOnError extends boolean = true>(options: Options<LagPdfData, ThrowOnError>) {
        return (options.client ?? client).post<LagPdfResponses, LagPdfErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zLagPdfData.parseAsync(data);
            },
            responseType: 'blob',
            responseValidator: async (data) => {
                return await zLagPdfResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/pdf',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OpplÆringspengerSØknadController {
    public static innsendingOpplæringspengerSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOpplæringspengerSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOpplæringspengerSøknadResponses,
            InnsendingOpplæringspengerSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOpplæringspengerSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/opplaringspenger/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OmsorgspengerUtvidetRettController {
    public static innsendingOmsorgspengerKroniskSyktBarnSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOmsorgspengerKroniskSyktBarnSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOmsorgspengerKroniskSyktBarnSøknadResponses,
            InnsendingOmsorgspengerKroniskSyktBarnSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOmsorgspengerKroniskSyktBarnSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/omsorgspenger-utvidet-rett/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OmsorgspengerUtbetalingSnfController {
    public static innsendingOmsorgspengerutbetalingSnfSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOmsorgspengerutbetalingSnfSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOmsorgspengerutbetalingSnfSøknadResponses,
            InnsendingOmsorgspengerutbetalingSnfSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOmsorgspengerutbetalingSnfSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/omsorgspenger-utbetaling-snf/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OmsorgspengerUtbetalingArbeidstakerController {
    public static innsendingOmsorgspengerutbetalingArbeidstakerSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOmsorgspengerutbetalingArbeidstakerSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOmsorgspengerutbetalingArbeidstakerSøknadResponses,
            InnsendingOmsorgspengerutbetalingArbeidstakerSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOmsorgspengerutbetalingArbeidstakerSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/omsorgspenger-utbetaling-arbeidstaker/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OmsorgspengerMidlertidigAleneController {
    public static innsendingOmsorgspengerMidlertidigAleneSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOmsorgspengerMidlertidigAleneSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOmsorgspengerMidlertidigAleneSøknadResponses,
            InnsendingOmsorgspengerMidlertidigAleneSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOmsorgspengerMidlertidigAleneSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/omsorgspenger-midlertidig-alene/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OmsorgsdagerAleneomsorgController {
    public static innsendingOmsorgsdagerAleneOmOmsorgenSøknad<ThrowOnError extends boolean = true>(
        options: Options<InnsendingOmsorgsdagerAleneOmOmsorgenSøknadData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingOmsorgsdagerAleneOmOmsorgenSøknadResponses,
            InnsendingOmsorgsdagerAleneOmOmsorgenSøknadErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingOmsorgsdagerAleneOmOmsorgenSøknadData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/omsorgsdager-aleneomsorg/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class EttersendingController {
    public static innsendingEttersendelse<ThrowOnError extends boolean = true>(
        options: Options<InnsendingEttersendelseData, ThrowOnError>,
    ) {
        return (options.client ?? client).post<
            InnsendingEttersendelseResponses,
            InnsendingEttersendelseErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zInnsendingEttersendelseData.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/ettersending/innsending',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class SØkerController {
    public static hentSøker<ThrowOnError extends boolean = true>(options?: Options<HentSøkerData, ThrowOnError>) {
        return (options?.client ?? client).get<HentSøkerResponses, HentSøkerErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zHentSøkerData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zHentSøkerResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppslag/soker',
            ...options,
        });
    }
}

export class BarnController {
    public static hentBarn<ThrowOnError extends boolean = true>(options?: Options<HentBarnData, ThrowOnError>) {
        return (options?.client ?? client).get<HentBarnResponses, HentBarnErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zHentBarnData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zHentBarnResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppslag/barn',
            ...options,
        });
    }
}

export class ArbeidsgivereController {
    public static hentArbeidsgivere<ThrowOnError extends boolean = true>(
        options: Options<HentArbeidsgivereData, ThrowOnError>,
    ) {
        return (options.client ?? client).get<HentArbeidsgivereResponses, HentArbeidsgivereErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zHentArbeidsgivereData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zHentArbeidsgivereResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppslag/arbeidsgiver',
            ...options,
        });
    }
}
