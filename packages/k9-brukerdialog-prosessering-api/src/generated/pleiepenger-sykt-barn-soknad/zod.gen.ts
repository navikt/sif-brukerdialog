// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zProblemDetail = z.object({
    type: z.string().url().optional(),
    title: z.string().optional(),
    status: z.number().int().optional(),
    detail: z.string().optional(),
    instance: z.string().url().optional(),
    properties: z.object({}).optional()
});

export const zPeriode = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date()
});

export const zArbeidsUke = z.object({
    periode: zPeriode,
    timer: z.string()
});

export const zArbeidsRedusert = z.object({
    type: z.enum([
        'PROSENT_AV_NORMALT',
        'TIMER_I_SNITT_PER_UKE',
        'ULIKE_UKER_TIMER'
    ]),
    prosentAvNormalt: z.number().optional(),
    timerPerUke: z.string().optional(),
    arbeidsuker: z.array(zArbeidsUke).optional()
});

export const zArbeidIPeriode = z.object({
    type: z.enum([
        'ARBEIDER_VANLIG',
        'ARBEIDER_REDUSERT',
        'ARBEIDER_IKKE',
        'IKKE_BESVART'
    ]),
    redusertArbeid: zArbeidsRedusert.optional()
});

export const zNormalArbeidstid = z.object({
    timerPerUkeISnitt: z.string()
});

export const zArbeidsforhold = z.object({
    normalarbeidstid: zNormalArbeidstid,
    arbeidIPeriode: zArbeidIPeriode
});

export const zArbeidsgiver = z.object({
    organisasjonsnummer: z.string().min(0).max(20),
    navn: z.string().min(1),
    erAnsatt: z.boolean(),
    'sluttetFørSøknadsperiode': z.boolean().optional(),
    arbeidsforhold: zArbeidsforhold.optional()
});

export const zBarnDetaljer = z.object({
    'fødselsnummer': z.string().length(11).optional(),
    'fødselsdato': z.string().date().optional(),
    'aktørId': z.string().optional(),
    navn: z.string().min(1),
    'getårsakManglerIdentitetsnummer': z.enum([
        'NYFØDT',
        'BARNET_BOR_I_UTLANDET',
        'ANNET'
    ]).optional()
});

export const zBeredskap = z.object({
    beredskap: z.boolean(),
    tilleggsinformasjon: z.string().optional()
});

export const zBosted = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    landkode: z.string().min(1),
    landnavn: z.string()
});

export const zEnkeltdag = z.object({
    dato: z.string().date(),
    tid: z.string()
});

export const zFerieuttak = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date()
});

export const zFerieuttakIPerioden = z.object({
    skalTaUtFerieIPerioden: z.boolean(),
    ferieuttak: z.array(zFerieuttak)
});

export const zFosterhjemgodtgjørelse = z.object({
    type: z.enum([
        'MOTTAR_IKKE',
        'MOTTAR_FRIKJØPT',
        'MOTTAR_I_DELER_AV_PERIODEN',
        'MOTTAR_I_HELE_PERIODEN'
    ]),
    'mottarFosterhjemsgodtgjørelse': z.boolean()
});

export const zFosterhjemsgodtgjørelseFrikjøpt = zFosterhjemgodtgjørelse.and(z.object({
    type: z.literal('FosterhjemsgodtgjørelseFrikjøpt')
})).and(z.object({
    'erFrikjøptFraJobb': z.boolean(),
    'frikjøptBeskrivelse': z.string()
}));

export const zFosterhjemsgodtgjørelseIkkeFrikjøpt = zFosterhjemgodtgjørelse.and(z.object({
    type: z.literal('FosterhjemsgodtgjørelseIkkeFrikjøpt')
})).and(z.object({
    'erFrikjøptFraJobb': z.boolean(),
    startdato: z.string().date().optional(),
    sluttdato: z.string().date().optional()
}));

export const zFosterhjemsgodtgjørelseMottarIkke = zFosterhjemgodtgjørelse.and(z.object({
    type: z.literal('FosterhjemsgodtgjørelseMottarIkke')
}));

export const zFrilans = z.object({
    harInntektSomFrilanser: z.boolean(),
    'startetFørSisteTreHeleMåneder': z.boolean().optional(),
    startdato: z.string().date().optional(),
    sluttdato: z.string().date().optional(),
    misterHonorar: z.boolean().optional(),
    type: z.enum([
        'FRILANS',
        'FRILANS_HONORAR',
        'HONORAR'
    ]).optional(),
    jobberFortsattSomFrilans: z.boolean().optional(),
    arbeidsforhold: zArbeidsforhold.optional()
});

export const zLand = z.object({
    landkode: z.string().min(1),
    landnavn: z.string().min(1)
});

export const zMedlemskap = z.object({
    harBoddIUtlandetSiste12Mnd: z.boolean().optional(),
    utenlandsoppholdSiste12Mnd: z.array(zBosted),
    skalBoIUtlandetNeste12Mnd: z.boolean().optional(),
    utenlandsoppholdNeste12Mnd: z.array(zBosted)
});

export const zNattevåk = z.object({
    'harNattevåk': z.boolean(),
    tilleggsinformasjon: z.string().optional()
});

export const zOmsorgsstønad = z.object({
    type: z.enum([
        'MOTTAR_IKKE',
        'MOTTAR_I_DELER_AV_PERIODEN',
        'MOTTAR_I_HELE_PERIODEN'
    ]),
    'mottarOmsorgsstønad': z.boolean()
});

export const zOmsorgsstønadMottarDelerAvPerioden = zOmsorgsstønad.and(z.object({
    type: z.literal('OmsorgsstønadMottarDelerAvPerioden')
})).and(z.object({
    startdato: z.string().date().optional(),
    sluttdato: z.string().date().optional(),
    antallTimerIUken: z.string()
}));

export const zOmsorgsstønadMottarHelePerioden = zOmsorgsstønad.and(z.object({
    type: z.literal('OmsorgsstønadMottarHelePerioden')
})).and(z.object({
    antallTimerIUken: z.string()
}));

export const zOmsorgsstønadMottarIkke = zOmsorgsstønad.and(z.object({
    type: z.literal('OmsorgsstønadMottarIkke')
}));

export const zPlanUkedager = z.object({
    mandag: z.string().optional(),
    tirsdag: z.string().optional(),
    onsdag: z.string().optional(),
    torsdag: z.string().optional(),
    fredag: z.string().optional()
});

export const zOmsorgstilbud = z.object({
    svarFortid: z.enum([
        'JA',
        'NEI'
    ]).optional(),
    svarFremtid: z.enum([
        'JA',
        'NEI',
        'USIKKER'
    ]).optional(),
    erLiktHverUke: z.boolean().optional(),
    enkeltdager: z.array(zEnkeltdag).optional(),
    ukedager: zPlanUkedager.optional()
});

export const zOpptjeningIUtlandet = z.object({
    navn: z.string(),
    opptjeningType: z.enum([
        'ARBEIDSTAKER',
        'FRILANSER'
    ]),
    land: zLand,
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date()
});

export const zUtenlandsopphold = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    landkode: z.string().min(1),
    landnavn: z.string(),
    'erUtenforEøs': z.boolean().optional(),
    erSammenMedBarnet: z.boolean().optional(),
    erBarnetInnlagt: z.boolean().optional(),
    perioderBarnetErInnlagt: z.array(zPeriode),
    'getårsak': z.enum([
        'BARNET_INNLAGT_I_HELSEINSTITUSJON_FOR_NORSK_OFFENTLIG_REGNING',
        'BARNET_INNLAGT_I_HELSEINSTITUSJON_DEKKET_ETTER_AVTALE_MED_ET_ANNET_LAND_OM_TRYGD',
        'ANNET'
    ]).optional()
});

export const zUtenlandsoppholdIPerioden = z.object({
    skalOppholdeSegIUtlandetIPerioden: z.boolean().optional(),
    opphold: z.array(zUtenlandsopphold)
});

export const zUtenlandskNæring = z.object({
    'næringstype': z.enum([
        'FISKE',
        'JORDBRUK_SKOGBRUK',
        'DAGMAMMA',
        'ANNEN'
    ]),
    'navnPåVirksomheten': z.string(),
    land: zLand,
    organisasjonsnummer: z.string().optional(),
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date().optional()
});

export const zStønadGodtgjørelse = z.object({
    'mottarStønadGodtgjørelse': z.boolean().optional(),
    startdato: z.string().date().optional(),
    sluttdato: z.string().date().optional()
});

export const zYrkesaktivSisteTreFerdigliknedeArene = z.object({
    oppstartsdato: z.string().date().optional()
});

export const zVarigEndring = z.object({
    dato: z.string().date().optional(),
    inntektEtterEndring: z.number().int().optional(),
    forklaring: z.string().optional()
});

export const zRegnskapsfører = z.object({
    navn: z.string().optional(),
    telefon: z.string().optional()
});

export const zVirksomhet = z.object({
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date().optional(),
    'næringstype': z.enum([
        'FISKE',
        'JORDBRUK_SKOGBRUK',
        'DAGMAMMA',
        'ANNEN'
    ]),
    'fiskerErPåBladB': z.boolean().optional(),
    'næringsinntekt': z.number().int().optional(),
    'navnPåVirksomheten': z.string(),
    organisasjonsnummer: z.string().min(0).max(20).optional(),
    registrertINorge: z.boolean(),
    registrertIUtlandet: zLand.optional(),
    'yrkesaktivSisteTreFerdigliknedeÅrene': zYrkesaktivSisteTreFerdigliknedeArene.optional(),
    varigEndring: zVarigEndring.optional(),
    'regnskapsfører': zRegnskapsfører.optional(),
    erNyoppstartet: z.boolean(),
    harFlereAktiveVirksomheter: z.boolean()
});

export const zSelvstendigNæringsdrivende = z.object({
    harInntektSomSelvstendig: z.boolean(),
    virksomhet: zVirksomhet.optional(),
    arbeidsforhold: zArbeidsforhold.optional()
});

export const zPleiepengerSyktBarnSøknad = z.object({
    newVersion: z.boolean().optional(),
    apiDataVersjon: z.string().optional(),
    'språk': z.enum([
        'nb',
        'nn'
    ]),
    'søkerNorskIdent': z.string().optional(),
    barn: zBarnDetaljer,
    arbeidsgivere: z.array(zArbeidsgiver),
    vedlegg: z.array(z.string()),
    'fødselsattestVedleggUrls': z.array(z.string()).optional(),
    fraOgMed: z.string().date(),
    tilOgMed: z.string().date(),
    medlemskap: zMedlemskap,
    utenlandsoppholdIPerioden: zUtenlandsoppholdIPerioden,
    ferieuttakIPerioden: zFerieuttakIPerioden.optional(),
    opptjeningIUtlandet: z.array(zOpptjeningIUtlandet),
    'utenlandskNæring': z.array(zUtenlandskNæring),
    harBekreftetOpplysninger: z.boolean(),
    'harForståttRettigheterOgPlikter': z.boolean(),
    omsorgstilbud: zOmsorgstilbud.optional(),
    'nattevåk': zNattevåk.optional(),
    beredskap: zBeredskap.optional(),
    frilans: zFrilans,
    'stønadGodtgjørelse': zStønadGodtgjørelse.optional(),
    'fosterhjemgodtgjørelse': z.union([
        zFosterhjemsgodtgjørelseFrikjøpt,
        zFosterhjemsgodtgjørelseIkkeFrikjøpt,
        zFosterhjemsgodtgjørelseMottarIkke
    ]).optional(),
    'omsorgsstønad': z.union([
        zOmsorgsstønadMottarDelerAvPerioden,
        zOmsorgsstønadMottarHelePerioden,
        zOmsorgsstønadMottarIkke
    ]).optional(),
    'selvstendigNæringsdrivende': zSelvstendigNæringsdrivende,
    barnRelasjon: z.enum([
        'MOR',
        'MEDMOR',
        'FAR',
        'FOSTERFORELDER',
        'ANNET'
    ]).optional(),
    barnRelasjonBeskrivelse: z.string().optional(),
    'harVærtEllerErVernepliktig': z.boolean().optional(),
    dataBruktTilUtledningAnnetData: z.string().optional()
});

export const zSøker = z.object({
    'aktørId': z.string(),
    'fødselsdato': z.string().date(),
    'fødselsnummer': z.string(),
    fornavn: z.string().optional(),
    mellomnavn: z.string().optional(),
    etternavn: z.string().optional()
});

export const zBarnOppslag = z.object({
    'fødselsdato': z.string().date(),
    fornavn: z.string(),
    mellomnavn: z.string().optional(),
    etternavn: z.string(),
    'aktørId': z.string()
});

export const zBarnOppslagListe = z.object({
    barn: z.array(zBarnOppslag)
});

export const zOrganisasjonDto = z.object({
    organisasjonsnummer: z.string(),
    navn: z.string().optional(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional()
});

export const zPrivatArbeidsgiverDto = z.object({
    offentligIdent: z.string(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional()
});

export const zFrilansoppdragDto = z.object({
    type: z.string(),
    organisasjonsnummer: z.string().optional(),
    navn: z.string().optional(),
    offentligIdent: z.string().optional(),
    ansattFom: z.string().date().optional(),
    ansattTom: z.string().date().optional()
});

export const zArbeidsgivereDto = z.object({
    organisasjoner: z.array(zOrganisasjonDto),
    privateArbeidsgivere: z.array(zPrivatArbeidsgiverDto).optional(),
    frilansoppdrag: z.array(zFrilansoppdragDto).optional()
});

export const zDeleteMellomlagringData = z.object({
    body: z.never().optional(),
    path: z.object({
        ytelse: z.string()
    }),
    query: z.never().optional()
});

export const zGetMellomlagringData = z.object({
    body: z.never().optional(),
    path: z.object({
        ytelse: z.string()
    }),
    query: z.never().optional()
});

/**
 * OK
 */
export const zGetMellomlagringResponse = z.string();

export const zCreateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string()
    }),
    query: z.never().optional()
});

export const zUpdateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string()
    }),
    query: z.never().optional()
});

export const zLagreVedleggData = z.object({
    body: z.object({
        vedlegg: z.string()
    }).optional(),
    path: z.never().optional(),
    query: z.never().optional()
});

export const zInnsendingPleiepengerSyktBarnSøknadData = z.object({
    body: zPleiepengerSyktBarnSøknad,
    path: z.never().optional(),
    query: z.never().optional(),
    headers: z.object({
        'X-Brukerdialog-Git-Sha': z.string()
    })
});

export const zSlettVedleggData = z.object({
    body: z.never().optional(),
    path: z.object({
        vedleggId: z.string().min(1)
    }),
    query: z.never().optional()
});

/**
 * No Content
 */
export const zSlettVedleggResponse = z.void();

export const zHentVedleggData = z.object({
    body: z.never().optional(),
    path: z.object({
        vedleggId: z.string().min(1)
    }),
    query: z.never().optional()
});

/**
 * OK
 */
export const zHentVedleggResponse = z.string();

export const zHentSøkerData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.never().optional()
});

/**
 * OK
 */
export const zHentSøkerResponse = zSøker;

export const zHentBarnData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.never().optional()
});

/**
 * OK
 */
export const zHentBarnResponse = zBarnOppslagListe;

export const zHentArbeidsgivereData = z.object({
    body: z.never().optional(),
    path: z.never().optional(),
    query: z.object({
        fra_og_med: z.string(),
        til_og_med: z.string(),
        inkluderAlleAnsettelsesperioder: z.boolean().optional(),
        frilansoppdrag: z.boolean().optional().default(false),
        private_arbeidsgivere: z.boolean().optional().default(false)
    })
});

/**
 * OK
 */
export const zHentArbeidsgivereResponse = zArbeidsgivereDto;