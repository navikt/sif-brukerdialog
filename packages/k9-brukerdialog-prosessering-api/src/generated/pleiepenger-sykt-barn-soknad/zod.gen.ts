// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zProblemDetail = z.object({
    type: z.optional(z.url()),
    title: z.optional(z.string()),
    status: z.optional(z.int()),
    detail: z.optional(z.string()),
    instance: z.optional(z.url()),
    properties: z.optional(z.object({})),
});

export const zPeriode = z.object({
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
});

export const zArbeidsUke = z.object({
    periode: zPeriode,
    timer: z.string(),
});

export const zArbeidsRedusert = z.object({
    type: z.enum(['PROSENT_AV_NORMALT', 'TIMER_I_SNITT_PER_UKE', 'ULIKE_UKER_TIMER']),
    prosentAvNormalt: z.optional(z.number()),
    timerPerUke: z.optional(z.string()),
    arbeidsuker: z.optional(z.array(zArbeidsUke)),
});

export const zArbeidIPeriode = z.object({
    type: z.enum(['ARBEIDER_VANLIG', 'ARBEIDER_REDUSERT', 'ARBEIDER_IKKE', 'IKKE_BESVART']),
    redusertArbeid: z.optional(zArbeidsRedusert),
});

export const zNormalArbeidstid = z.object({
    timerPerUkeISnitt: z.string(),
});

export const zArbeidsforhold = z.object({
    normalarbeidstid: zNormalArbeidstid,
    arbeidIPeriode: zArbeidIPeriode,
});

export const zArbeidsgiver = z.object({
    organisasjonsnummer: z.string().min(0).max(20),
    navn: z.string().min(1),
    erAnsatt: z.boolean(),
    sluttetFørSøknadsperiode: z.optional(z.boolean()),
    arbeidsforhold: z.optional(zArbeidsforhold),
});

export const zBarnDetaljer = z.object({
    fødselsnummer: z.optional(z.string().length(11)),
    fødselsdato: z.optional(z.iso.date()),
    aktørId: z.optional(z.string()),
    navn: z.string().min(1),
    getårsakManglerIdentitetsnummer: z.optional(z.enum(['NYFØDT', 'BARNET_BOR_I_UTLANDET', 'ANNET'])),
});

export const zBeredskap = z.object({
    beredskap: z.boolean(),
    tilleggsinformasjon: z.optional(z.string()),
});

export const zBosted = z.object({
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
    landkode: z.string().min(1),
    landnavn: z.string(),
});

export const zEnkeltdag = z.object({
    dato: z.iso.date(),
    tid: z.string(),
});

export const zFerieuttak = z.object({
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
});

export const zFerieuttakIPerioden = z.object({
    skalTaUtFerieIPerioden: z.boolean(),
    ferieuttak: z.array(zFerieuttak),
});

export const zFosterhjemgodtgjørelse = z.object({
    type: z.enum(['MOTTAR_IKKE', 'MOTTAR_FRIKJØPT', 'MOTTAR_I_DELER_AV_PERIODEN', 'MOTTAR_I_HELE_PERIODEN']),
    mottarFosterhjemsgodtgjørelse: z.boolean(),
});

export const zFosterhjemsgodtgjørelseFrikjøpt = zFosterhjemgodtgjørelse
    .and(
        z.object({
            type: z.literal('FosterhjemsgodtgjørelseFrikjøpt'),
        }),
    )
    .and(
        z.object({
            erFrikjøptFraJobb: z.boolean(),
            frikjøptBeskrivelse: z.string(),
        }),
    );

export const zFosterhjemsgodtgjørelseIkkeFrikjøpt = zFosterhjemgodtgjørelse
    .and(
        z.object({
            type: z.literal('FosterhjemsgodtgjørelseIkkeFrikjøpt'),
        }),
    )
    .and(
        z.object({
            erFrikjøptFraJobb: z.boolean(),
            startdato: z.optional(z.iso.date()),
            sluttdato: z.optional(z.iso.date()),
        }),
    );

export const zFosterhjemsgodtgjørelseMottarIkke = zFosterhjemgodtgjørelse.and(
    z.object({
        type: z.literal('FosterhjemsgodtgjørelseMottarIkke'),
    }),
);

export const zFrilans = z.object({
    harInntektSomFrilanser: z.boolean(),
    startetFørSisteTreHeleMåneder: z.optional(z.boolean()),
    startdato: z.optional(z.iso.date()),
    sluttdato: z.optional(z.iso.date()),
    misterHonorar: z.optional(z.boolean()),
    type: z.optional(z.enum(['FRILANS', 'FRILANS_HONORAR', 'HONORAR'])),
    jobberFortsattSomFrilans: z.optional(z.boolean()),
    arbeidsforhold: z.optional(zArbeidsforhold),
});

export const zLand = z.object({
    landkode: z.string().min(1),
    landnavn: z.string().min(1),
});

export const zMedlemskap = z.object({
    harBoddIUtlandetSiste12Mnd: z.optional(z.boolean()),
    utenlandsoppholdSiste12Mnd: z.array(zBosted),
    skalBoIUtlandetNeste12Mnd: z.optional(z.boolean()),
    utenlandsoppholdNeste12Mnd: z.array(zBosted),
});

export const zNattevåk = z.object({
    harNattevåk: z.boolean(),
    tilleggsinformasjon: z.optional(z.string()),
});

export const zOmsorgsstønad = z.object({
    type: z.enum(['MOTTAR_IKKE', 'MOTTAR_I_DELER_AV_PERIODEN', 'MOTTAR_I_HELE_PERIODEN']),
    mottarOmsorgsstønad: z.boolean(),
});

export const zOmsorgsstønadMottarDelerAvPerioden = zOmsorgsstønad
    .and(
        z.object({
            type: z.literal('OmsorgsstønadMottarDelerAvPerioden'),
        }),
    )
    .and(
        z.object({
            startdato: z.optional(z.iso.date()),
            sluttdato: z.optional(z.iso.date()),
            antallTimerIUken: z.string(),
        }),
    );

export const zOmsorgsstønadMottarHelePerioden = zOmsorgsstønad
    .and(
        z.object({
            type: z.literal('OmsorgsstønadMottarHelePerioden'),
        }),
    )
    .and(
        z.object({
            antallTimerIUken: z.string(),
        }),
    );

export const zOmsorgsstønadMottarIkke = zOmsorgsstønad.and(
    z.object({
        type: z.literal('OmsorgsstønadMottarIkke'),
    }),
);

export const zPlanUkedager = z.object({
    mandag: z.optional(z.string()),
    tirsdag: z.optional(z.string()),
    onsdag: z.optional(z.string()),
    torsdag: z.optional(z.string()),
    fredag: z.optional(z.string()),
});

export const zOmsorgstilbud = z.object({
    svarFortid: z.optional(z.enum(['JA', 'NEI'])),
    svarFremtid: z.optional(z.enum(['JA', 'NEI', 'USIKKER'])),
    erLiktHverUke: z.optional(z.boolean()),
    enkeltdager: z.optional(z.array(zEnkeltdag)),
    ukedager: z.optional(zPlanUkedager),
});

export const zOpptjeningIUtlandet = z.object({
    navn: z.string(),
    opptjeningType: z.enum(['ARBEIDSTAKER', 'FRILANSER']),
    land: zLand,
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
});

export const zUtenlandsopphold = z.object({
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
    landkode: z.string().min(1),
    landnavn: z.string(),
    erUtenforEøs: z.optional(z.boolean()),
    erSammenMedBarnet: z.optional(z.boolean()),
    erBarnetInnlagt: z.optional(z.boolean()),
    perioderBarnetErInnlagt: z.array(zPeriode),
    getårsak: z.optional(
        z.enum([
            'BARNET_INNLAGT_I_HELSEINSTITUSJON_FOR_NORSK_OFFENTLIG_REGNING',
            'BARNET_INNLAGT_I_HELSEINSTITUSJON_DEKKET_ETTER_AVTALE_MED_ET_ANNET_LAND_OM_TRYGD',
            'ANNET',
        ]),
    ),
});

export const zUtenlandsoppholdIPerioden = z.object({
    skalOppholdeSegIUtlandetIPerioden: z.optional(z.boolean()),
    opphold: z.array(zUtenlandsopphold),
});

export const zUtenlandskNæring = z.object({
    næringstype: z.enum(['FISKE', 'JORDBRUK_SKOGBRUK', 'DAGMAMMA', 'ANNEN']),
    navnPåVirksomheten: z.string(),
    land: zLand,
    organisasjonsnummer: z.optional(z.string()),
    fraOgMed: z.iso.date(),
    tilOgMed: z.optional(z.iso.date()),
});

export const zStønadGodtgjørelse = z.object({
    mottarStønadGodtgjørelse: z.optional(z.boolean()),
    startdato: z.optional(z.iso.date()),
    sluttdato: z.optional(z.iso.date()),
});

export const zYrkesaktivSisteTreFerdigliknedeArene = z.object({
    oppstartsdato: z.optional(z.iso.date()),
});

export const zVarigEndring = z.object({
    dato: z.optional(z.iso.date()),
    inntektEtterEndring: z.optional(z.int()),
    forklaring: z.optional(z.string()),
});

export const zRegnskapsfører = z.object({
    navn: z.optional(z.string()),
    telefon: z.optional(z.string()),
});

export const zVirksomhet = z.object({
    fraOgMed: z.iso.date(),
    tilOgMed: z.optional(z.iso.date()),
    næringstype: z.enum(['FISKE', 'JORDBRUK_SKOGBRUK', 'DAGMAMMA', 'ANNEN']),
    fiskerErPåBladB: z.optional(z.boolean()),
    næringsinntekt: z.optional(z.int()),
    navnPåVirksomheten: z.string(),
    organisasjonsnummer: z.optional(z.string().min(0).max(20)),
    registrertINorge: z.boolean(),
    registrertIUtlandet: z.optional(zLand),
    yrkesaktivSisteTreFerdigliknedeÅrene: z.optional(zYrkesaktivSisteTreFerdigliknedeArene),
    varigEndring: z.optional(zVarigEndring),
    regnskapsfører: z.optional(zRegnskapsfører),
    erNyoppstartet: z.boolean(),
    harFlereAktiveVirksomheter: z.boolean(),
});

export const zSelvstendigNæringsdrivende = z.object({
    harInntektSomSelvstendig: z.boolean(),
    virksomhet: z.optional(zVirksomhet),
    arbeidsforhold: z.optional(zArbeidsforhold),
});

export const zPleiepengerSyktBarnSøknad = z.object({
    newVersion: z.optional(z.boolean()),
    apiDataVersjon: z.optional(z.string()),
    språk: z.enum(['nb', 'nn']),
    søkerNorskIdent: z.optional(z.string()),
    barn: zBarnDetaljer,
    arbeidsgivere: z.array(zArbeidsgiver),
    vedlegg: z.array(z.string()),
    fødselsattestVedleggUrls: z.optional(z.array(z.string())),
    fraOgMed: z.iso.date(),
    tilOgMed: z.iso.date(),
    medlemskap: zMedlemskap,
    utenlandsoppholdIPerioden: zUtenlandsoppholdIPerioden,
    ferieuttakIPerioden: z.optional(zFerieuttakIPerioden),
    opptjeningIUtlandet: z.array(zOpptjeningIUtlandet),
    utenlandskNæring: z.array(zUtenlandskNæring),
    harBekreftetOpplysninger: z.boolean(),
    harForståttRettigheterOgPlikter: z.boolean(),
    omsorgstilbud: z.optional(zOmsorgstilbud),
    nattevåk: z.optional(zNattevåk),
    beredskap: z.optional(zBeredskap),
    frilans: zFrilans,
    stønadGodtgjørelse: z.optional(zStønadGodtgjørelse),
    fosterhjemgodtgjørelse: z.optional(
        z.union([
            zFosterhjemsgodtgjørelseFrikjøpt,
            zFosterhjemsgodtgjørelseIkkeFrikjøpt,
            zFosterhjemsgodtgjørelseMottarIkke,
        ]),
    ),
    omsorgsstønad: z.optional(
        z.union([zOmsorgsstønadMottarDelerAvPerioden, zOmsorgsstønadMottarHelePerioden, zOmsorgsstønadMottarIkke]),
    ),
    selvstendigNæringsdrivende: zSelvstendigNæringsdrivende,
    barnRelasjon: z.optional(z.enum(['MOR', 'MEDMOR', 'FAR', 'FOSTERFORELDER', 'ANNET'])),
    barnRelasjonBeskrivelse: z.optional(z.string()),
    harVærtEllerErVernepliktig: z.optional(z.boolean()),
    dataBruktTilUtledningAnnetData: z.optional(z.string()),
});

export const zSøker = z.object({
    aktørId: z.string(),
    fødselsdato: z.iso.date(),
    fødselsnummer: z.string(),
    fornavn: z.optional(z.string()),
    mellomnavn: z.optional(z.string()),
    etternavn: z.optional(z.string()),
});

export const zBarnOppslag = z.object({
    fødselsdato: z.iso.date(),
    fornavn: z.string(),
    mellomnavn: z.optional(z.string()),
    etternavn: z.string(),
    aktørId: z.string(),
});

export const zBarnOppslagListe = z.object({
    barn: z.array(zBarnOppslag),
});

export const zOrganisasjonDto = z.object({
    organisasjonsnummer: z.string(),
    navn: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zPrivatArbeidsgiverDto = z.object({
    offentligIdent: z.string(),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zFrilansoppdragDto = z.object({
    type: z.string(),
    organisasjonsnummer: z.optional(z.string()),
    navn: z.optional(z.string()),
    offentligIdent: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zArbeidsgivereDto = z.object({
    organisasjoner: z.array(zOrganisasjonDto),
    privateArbeidsgivere: z.optional(z.array(zPrivatArbeidsgiverDto)),
    frilansoppdrag: z.optional(z.array(zFrilansoppdragDto)),
});

export const zDeleteMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zGetMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zGetMellomlagringResponse = z.string();

export const zCreateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zUpdateMellomlagringData = z.object({
    body: z.object({}),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zLagreVedleggData = z.object({
    body: z.optional(
        z.object({
            vedlegg: z.string(),
        }),
    ),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

export const zInnsendingPleiepengerSyktBarnSøknadData = z.object({
    body: zPleiepengerSyktBarnSøknad,
    path: z.optional(z.never()),
    query: z.optional(z.never()),
    headers: z.object({
        'X-Brukerdialog-Git-Sha': z.string(),
    }),
});

export const zSlettVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * No Content
 */
export const zSlettVedleggResponse = z.void();

export const zHentVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentVedleggResponse = z.string();

export const zHentSøkerData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentSøkerResponse = zSøker;

export const zHentBarnData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentBarnResponse = zBarnOppslagListe;

export const zHentArbeidsgivereData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.object({
        fra_og_med: z.string(),
        til_og_med: z.string(),
        inkluderAlleAnsettelsesperioder: z.optional(z.boolean()),
        frilansoppdrag: z.optional(z.boolean()).default(false),
        private_arbeidsgivere: z.optional(z.boolean()).default(false),
    }),
});

/**
 * OK
 */
export const zHentArbeidsgivereResponse = zArbeidsgivereDto;
