// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zProblemDetail = z.object({
    type: z.optional(z.url()),
    title: z.optional(z.string()),
    status: z.optional(z.int()),
    detail: z.optional(z.string()),
    instance: z.optional(z.url()),
    properties: z.optional(z.record(z.string(), z.unknown())),
});

export const zAnnenForelder = z.object({
    fnr: z.string().length(11),
    navn: z.string().min(1),
    situasjon: z.enum(['INNLAGT_I_HELSEINSTITUSJON', 'UTØVER_VERNEPLIKT', 'FENGSEL', 'SYKDOM', 'ANNET']),
    situasjonBeskrivelse: z.optional(z.string()),
    periodeOver6Måneder: z.optional(z.boolean()),
    periodeFraOgMed: z.iso.date(),
    periodeTilOgMed: z.optional(z.iso.date()),
});

export const zBarn = z.object({
    norskIdentifikator: z.optional(z.string().length(11)),
    fødselsdato: z.optional(z.iso.date()),
    navn: z.string().min(1),
    aktørId: z.optional(z.string()),
});

export const zOmsorgspengerMidlertidigAleneSøknad = z.object({
    id: z.string(),
    språk: z.string(),
    søkerNorskIdent: z.optional(z.string()),
    annenForelder: zAnnenForelder,
    barn: z.array(zBarn).min(1),
    harBekreftetOpplysninger: z.boolean(),
    harForståttRettigheterOgPlikter: z.boolean(),
    dataBruktTilUtledningAnnetData: z.optional(z.string()),
});

export const zSøker = z.object({
    aktørId: z.string(),
    fødselsdato: z.iso.date(),
    fødselsnummer: z.string(),
    fornavn: z.optional(z.string()),
    mellomnavn: z.optional(z.string()),
    etternavn: z.optional(z.string()),
});

export const zBarnOppslag = z.object({
    fødselsdato: z.iso.date(),
    fornavn: z.string(),
    mellomnavn: z.optional(z.string()),
    etternavn: z.string(),
    aktørId: z.string(),
});

export const zBarnOppslagListe = z.object({
    barn: z.array(zBarnOppslag),
});

export const zOrganisasjonDto = z.object({
    organisasjonsnummer: z.string(),
    navn: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zPrivatArbeidsgiverDto = z.object({
    offentligIdent: z.string(),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zFrilansoppdragDto = z.object({
    type: z.string(),
    organisasjonsnummer: z.optional(z.string()),
    navn: z.optional(z.string()),
    offentligIdent: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zArbeidsgivereDto = z.object({
    organisasjoner: z.array(zOrganisasjonDto),
    privateArbeidsgivere: z.optional(z.array(zPrivatArbeidsgiverDto)),
    frilansoppdrag: z.optional(z.array(zFrilansoppdragDto)),
});

export const zDeleteMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zGetMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zGetMellomlagringResponse = z.string();

export const zCreateMellomlagringData = z.object({
    body: z.record(z.string(), z.unknown()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zUpdateMellomlagringData = z.object({
    body: z.record(z.string(), z.unknown()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zLagreVedleggData = z.object({
    body: z.optional(
        z.object({
            vedlegg: z.string(),
        }),
    ),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

export const zInnsendingOmsorgspengerMidlertidigAleneSøknadData = z.object({
    body: zOmsorgspengerMidlertidigAleneSøknad,
    path: z.optional(z.never()),
    query: z.optional(z.never()),
    headers: z.object({
        'X-Brukerdialog-Git-Sha': z.string(),
    }),
});

export const zSlettVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * No Content
 */
export const zSlettVedleggResponse = z.void();

export const zHentVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentVedleggResponse = z.string();

export const zHentSøkerData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentSøkerResponse = zSøker;

export const zHentBarnData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentBarnResponse = zBarnOppslagListe;

export const zHentArbeidsgivereData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.object({
        fra_og_med: z.string(),
        til_og_med: z.string(),
        inkluderAlleAnsettelsesperioder: z.optional(z.boolean()),
        frilansoppdrag: z.optional(z.boolean()).default(false),
        private_arbeidsgivere: z.optional(z.boolean()).default(false),
    }),
});

/**
 * OK
 */
export const zHentArbeidsgivereResponse = zArbeidsgivereDto;
