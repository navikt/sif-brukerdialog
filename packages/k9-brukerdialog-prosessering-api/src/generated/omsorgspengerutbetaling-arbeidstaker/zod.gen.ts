// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zProblemDetail = z.object({
    type: z.optional(z.url()),
    title: z.optional(z.string()),
    status: z.optional(z.int()),
    detail: z.optional(z.string()),
    instance: z.optional(z.url()),
    properties: z.optional(z.record(z.string(), z.unknown())),
});

export const zUtbetalingsperiode = z.object({
    fraOgMed: z.optional(z.iso.date()),
    tilOgMed: z.optional(z.iso.date()),
    antallTimerBorte: z.optional(z.string()),
    antallTimerPlanlagt: z.optional(z.string()),
    årsak: z.optional(z.enum(['STENGT_SKOLE_ELLER_BARNEHAGE', 'SMITTEVERNHENSYN', 'ORDINÆRT_FRAVÆR'])),
    aktivitetFravær: z.optional(z.array(z.enum(['ARBEIDSTAKER', 'FRILANSER', 'SELVSTENDIG_VIRKSOMHET']))),
});

export const zArbeidsgiver = z.object({
    navn: z.optional(z.string()),
    organisasjonsnummer: z.optional(z.string()),
    utbetalingsårsak: z.optional(
        z.enum(['ARBEIDSGIVER_KONKURS', 'NYOPPSTARTET_HOS_ARBEIDSGIVER', 'KONFLIKT_MED_ARBEIDSGIVER']),
    ),
    perioder: z.optional(z.array(zUtbetalingsperiode)),
    konfliktForklaring: z.optional(z.string()),
    årsakNyoppstartet: z.optional(
        z.enum([
            'JOBBET_HOS_ANNEN_ARBEIDSGIVER',
            'VAR_FRILANSER',
            'VAR_SELVSTENDIGE',
            'SØKTE_ANDRE_UTBETALINGER',
            'ARBEID_I_UTLANDET',
            'UTØVDE_VERNEPLIKT',
            'ANNET',
        ]),
    ),
    arbeidsgiverHarUtbetaltLønn: z.optional(z.boolean()),
    harHattFraværHosArbeidsgiver: z.optional(z.boolean()),
});

export const zBarn = z.object({
    identitetsnummer: z.optional(z.string()),
    aktørId: z.optional(z.string()),
    fødselsdato: z.optional(z.iso.date()),
    navn: z.optional(z.string()),
    type: z.optional(z.enum(['FRA_OPPSLAG', 'FOSTERBARN', 'ANNET'])),
});

export const zBekreftelser = z.object({
    harBekreftetOpplysninger: z.boolean(),
    harForståttRettigheterOgPlikter: z.boolean(),
});

export const zBosted = z.object({
    fraOgMed: z.optional(z.iso.date()),
    tilOgMed: z.optional(z.iso.date()),
    landkode: z.optional(z.string()),
    landnavn: z.optional(z.string()),
    erEØSLand: z.optional(z.boolean()),
});

export const zDineBarn = z.object({
    barn: z.array(z.unknown()),
    harDeltBosted: z.boolean(),
});

export const zOmsorgspengerutbetalingArbeidstakerSøknad = z.object({
    språk: z.string(),
    vedlegg: z.array(z.string()),
    søkerNorskIdent: z.optional(z.string()),
    bosteder: z.array(z.unknown()),
    opphold: z.array(z.unknown()),
});

export const zSøker = z.object({
    aktørId: z.string(),
    fødselsdato: z.iso.date(),
    fødselsnummer: z.string(),
    fornavn: z.optional(z.string()),
    mellomnavn: z.optional(z.string()),
    etternavn: z.optional(z.string()),
});

export const zBarnOppslag = z.object({
    fødselsdato: z.iso.date(),
    fornavn: z.string(),
    mellomnavn: z.optional(z.string()),
    etternavn: z.string(),
    aktørId: z.string(),
});

export const zBarnOppslagListe = z.object({
    barn: z.array(zBarnOppslag),
});

export const zOrganisasjonDto = z.object({
    organisasjonsnummer: z.string(),
    navn: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zPrivatArbeidsgiverDto = z.object({
    offentligIdent: z.string(),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zFrilansoppdragDto = z.object({
    type: z.string(),
    organisasjonsnummer: z.optional(z.string()),
    navn: z.optional(z.string()),
    offentligIdent: z.optional(z.string()),
    ansattFom: z.optional(z.iso.date()),
    ansattTom: z.optional(z.iso.date()),
});

export const zArbeidsgivereDto = z.object({
    organisasjoner: z.array(zOrganisasjonDto),
    privateArbeidsgivere: z.optional(z.array(zPrivatArbeidsgiverDto)),
    frilansoppdrag: z.optional(z.array(zFrilansoppdragDto)),
});

export const zDineBarnWritable = z.object({
    barn: z.array(zBarn),
    harDeltBosted: z.boolean(),
});

export const zOmsorgspengerutbetalingArbeidstakerSøknadWritable = z.object({
    språk: z.string(),
    vedlegg: z.array(z.string()),
    søkerNorskIdent: z.optional(z.string()),
    bosteder: z.array(zBosted),
    opphold: z.array(zBosted),
    bekreftelser: z.optional(zBekreftelser),
    arbeidsgivere: z.optional(z.array(zArbeidsgiver)),
    dineBarn: z.optional(zDineBarnWritable),
    hjemmePgaSmittevernhensyn: z.optional(z.boolean()),
    hjemmePgaStengtBhgSkole: z.optional(z.boolean()),
    dataBruktTilUtledningAnnetData: z.optional(z.string()),
});

export const zDeleteMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zGetMellomlagringData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zGetMellomlagringResponse = z.string();

export const zCreateMellomlagringData = z.object({
    body: z.record(z.string(), z.unknown()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zUpdateMellomlagringData = z.object({
    body: z.record(z.string(), z.unknown()),
    path: z.object({
        ytelse: z.string(),
    }),
    query: z.optional(z.never()),
});

export const zLagreVedleggData = z.object({
    body: z.optional(
        z.object({
            vedlegg: z.string(),
        }),
    ),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

export const zInnsendingOmsorgspengerutbetalingArbeidstakerSøknadData = z.object({
    body: zOmsorgspengerutbetalingArbeidstakerSøknad,
    path: z.optional(z.never()),
    query: z.optional(z.never()),
    headers: z.object({
        'X-Brukerdialog-Git-Sha': z.string(),
    }),
});

export const zSlettVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * No Content
 */
export const zSlettVedleggResponse = z.void();

export const zHentVedleggData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        vedleggId: z.string().min(1),
    }),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentVedleggResponse = z.string();

export const zHentSøkerData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentSøkerResponse = zSøker;

export const zHentBarnData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never()),
});

/**
 * OK
 */
export const zHentBarnResponse = zBarnOppslagListe;

export const zHentArbeidsgivereData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.object({
        fra_og_med: z.string(),
        til_og_med: z.string(),
        inkluderAlleAnsettelsesperioder: z.optional(z.boolean()),
        frilansoppdrag: z.optional(z.boolean()).default(false),
        private_arbeidsgivere: z.optional(z.boolean()).default(false),
    }),
});

/**
 * OK
 */
export const zHentArbeidsgivereResponse = zArbeidsgivereDto;
