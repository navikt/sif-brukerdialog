// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type {
    EndreStartdatoData,
    EndreStartdatoResponses,
    EndreStartdatoErrors,
    EndreSluttdatoData,
    EndreSluttdatoResponses,
    EndreSluttdatoErrors,
    MeldUtDeltakerData,
    MeldUtDeltakerResponses,
    MeldUtDeltakerErrors,
    MarkerDeltakelseSomSøktData,
    MarkerDeltakelseSomSøktResponses,
    MarkerDeltakelseSomSøktErrors,
    MeldInnDeltakerData,
    MeldInnDeltakerResponses,
    MeldInnDeltakerErrors,
    HentAlleDeltakelserGittDeltakerAktørData,
    HentAlleDeltakelserGittDeltakerAktørResponses,
    HentAlleDeltakelserGittDeltakerAktørErrors,
    HentDeltakerInfoGittDeltakerData,
    HentDeltakerInfoGittDeltakerResponses,
    HentDeltakerInfoGittDeltakerErrors,
    UtløperOppgaveData,
    UtløperOppgaveResponses,
    UtløperOppgaveErrors,
    UtløperOppgaveForTypeOgPeriodeData,
    UtløperOppgaveForTypeOgPeriodeResponses,
    UtløperOppgaveForTypeOgPeriodeErrors,
    OpprettOppgaveForKontrollAvRegisterinntektData,
    OpprettOppgaveForKontrollAvRegisterinntektResponses,
    OpprettOppgaveForKontrollAvRegisterinntektErrors,
    OpprettOppgaveForInntektsrapporteringData,
    OpprettOppgaveForInntektsrapporteringResponses,
    OpprettOppgaveForInntektsrapporteringErrors,
    OpprettOppgaveForEndretProgramperiodeData,
    OpprettOppgaveForEndretProgramperiodeResponses,
    OpprettOppgaveForEndretProgramperiodeErrors,
    AvbrytOppgaveData,
    AvbrytOppgaveResponses,
    AvbrytOppgaveErrors,
    HentAlleDeltakelserGittDeltakerIdData,
    HentAlleDeltakelserGittDeltakerIdResponses,
    HentAlleDeltakelserGittDeltakerIdErrors,
    DeltakelseHistorikkData,
    DeltakelseHistorikkResponses,
    DeltakelseHistorikkErrors,
    HentDeltakerInfoGittDeltakerIdData,
    HentDeltakerInfoGittDeltakerIdResponses,
    HentDeltakerInfoGittDeltakerIdErrors,
    HentKontonummerData,
    HentKontonummerResponses,
    HentKontonummerErrors,
    HentDeltakersOppgaveData,
    HentDeltakersOppgaveResponses,
    HentDeltakersOppgaveErrors,
    MarkerOppgaveSomÅpnetData,
    MarkerOppgaveSomÅpnetResponses,
    MarkerOppgaveSomÅpnetErrors,
    MarkerOppgaveSomLøstData,
    MarkerOppgaveSomLøstResponses,
    MarkerOppgaveSomLøstErrors,
    MarkerOppgaveSomLukketData,
    MarkerOppgaveSomLukketResponses,
    MarkerOppgaveSomLukketErrors,
    HentAlleMineDeltakelserData,
    HentAlleMineDeltakelserResponses,
    HentAlleMineDeltakelserErrors,
    FjernFraProgramData,
    FjernFraProgramResponses,
    FjernFraProgramErrors,
} from './types.gen';
import {
    zEndreStartdatoResponse,
    zEndreSluttdatoResponse,
    zMeldUtDeltakerResponse,
    zMarkerDeltakelseSomSøktResponse,
    zMeldInnDeltakerResponse,
    zHentAlleDeltakelserGittDeltakerAktørResponse,
    zHentDeltakerInfoGittDeltakerResponse,
    zOpprettOppgaveForKontrollAvRegisterinntektResponse,
    zOpprettOppgaveForInntektsrapporteringResponse,
    zOpprettOppgaveForEndretProgramperiodeResponse,
    zHentAlleDeltakelserGittDeltakerIdResponse,
    zDeltakelseHistorikkResponse,
    zHentDeltakerInfoGittDeltakerIdResponse,
    zHentKontonummerResponse,
    zHentDeltakersOppgaveResponse,
    zMarkerOppgaveSomÅpnetResponse,
    zMarkerOppgaveSomLøstResponse,
    zMarkerOppgaveSomLukketResponse,
    zHentAlleMineDeltakelserResponse,
    zFjernFraProgramResponse,
} from './zod.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<
    TData,
    ThrowOnError
> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class VeilederService {
    /**
     * Endrer startdato på en deltakelse i ungdomsprogrammet
     */
    public static endreStartdato<ThrowOnError extends boolean = true>(
        options: Options<EndreStartdatoData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<EndreStartdatoResponses, EndreStartdatoErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zEndreStartdatoResponse.parseAsync(data);
            },
            url: '/veileder/register/deltakelse/{deltakelseId}/endre/startdato',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Endrer startdato på en deltakelse i ungdomsprogrammet
     */
    public static endreSluttdato<ThrowOnError extends boolean = true>(
        options: Options<EndreSluttdatoData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<EndreSluttdatoResponses, EndreSluttdatoErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zEndreSluttdatoResponse.parseAsync(data);
            },
            url: '/veileder/register/deltakelse/{deltakelseId}/endre/sluttdato',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Avslutter en deltakelse i ungdomsprogrammet
     */
    public static meldUtDeltaker<ThrowOnError extends boolean = true>(
        options: Options<MeldUtDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<MeldUtDeltakerResponses, MeldUtDeltakerErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMeldUtDeltakerResponse.parseAsync(data);
            },
            url: '/veileder/register/deltakelse/{deltakelseId}/avslutt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Meld inn en deltaker i ungdomsprogrammet.
     */
    public static meldInnDeltaker<ThrowOnError extends boolean = true>(
        options: Options<MeldInnDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<MeldInnDeltakerResponses, MeldInnDeltakerErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMeldInnDeltakerResponse.parseAsync(data);
            },
            url: '/veileder/register/deltaker/innmelding',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Hent alle deltakelser for en deltaker i ungdomsprogrammet
     */
    public static hentAlleDeltakelserGittDeltakerId<ThrowOnError extends boolean = true>(
        options: Options<HentAlleDeltakelserGittDeltakerIdData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            HentAlleDeltakelserGittDeltakerIdResponses,
            HentAlleDeltakelserGittDeltakerIdErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentAlleDeltakelserGittDeltakerIdResponse.parseAsync(data);
            },
            url: '/veileder/register/deltaker/{deltakerId}/deltakelser',
            ...options,
        });
    }

    public static deltakelseHistorikk<ThrowOnError extends boolean = true>(
        options: Options<DeltakelseHistorikkData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            DeltakelseHistorikkResponses,
            DeltakelseHistorikkErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zDeltakelseHistorikkResponse.parseAsync(data);
            },
            url: '/veileder/register/deltakelse/{deltakelseId}/historikk',
            ...options,
        });
    }

    /**
     * Fjern en deltaker fra ungdomsprogrammet
     */
    public static fjernFraProgram<ThrowOnError extends boolean = true>(
        options: Options<FjernFraProgramData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).delete<FjernFraProgramResponses, FjernFraProgramErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zFjernFraProgramResponse.parseAsync(data);
            },
            url: '/veileder/register/deltaker/{deltakerId}/fjern',
            ...options,
        });
    }
}

export class DeltakelseService {
    /**
     * Markerer at deltakelsen er søkt om
     */
    public static markerDeltakelseSomSøkt<ThrowOnError extends boolean = true>(
        options: Options<MarkerDeltakelseSomSøktData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<
            MarkerDeltakelseSomSøktResponses,
            MarkerDeltakelseSomSøktErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMarkerDeltakelseSomSøktResponse.parseAsync(data);
            },
            url: '/deltakelse/register/{id}/marker-har-sokt',
            ...options,
        });
    }

    /**
     * Henter en oppgave for en gitt deltakelse
     */
    public static hentDeltakersOppgave<ThrowOnError extends boolean = true>(
        options: Options<HentDeltakersOppgaveData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            HentDeltakersOppgaveResponses,
            HentDeltakersOppgaveErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentDeltakersOppgaveResponse.parseAsync(data);
            },
            url: '/deltakelse/register/oppgave/{oppgaveReferanse}',
            ...options,
        });
    }

    /**
     * Markerer en oppgave som åpnet
     */
    public static markerOppgaveSomÅpnet<ThrowOnError extends boolean = true>(
        options: Options<MarkerOppgaveSomÅpnetData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            MarkerOppgaveSomÅpnetResponses,
            MarkerOppgaveSomÅpnetErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMarkerOppgaveSomÅpnetResponse.parseAsync(data);
            },
            url: '/deltakelse/register/oppgave/{oppgaveReferanse}/åpnet',
            ...options,
        });
    }

    /**
     * Markerer en oppgave som åpnet
     */
    public static markerOppgaveSomLøst<ThrowOnError extends boolean = true>(
        options: Options<MarkerOppgaveSomLøstData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            MarkerOppgaveSomLøstResponses,
            MarkerOppgaveSomLøstErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMarkerOppgaveSomLøstResponse.parseAsync(data);
            },
            url: '/deltakelse/register/oppgave/{oppgaveReferanse}/løst',
            ...options,
        });
    }

    /**
     * Markerer en oppgave som lukket
     */
    public static markerOppgaveSomLukket<ThrowOnError extends boolean = true>(
        options: Options<MarkerOppgaveSomLukketData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            MarkerOppgaveSomLukketResponses,
            MarkerOppgaveSomLukketErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zMarkerOppgaveSomLukketResponse.parseAsync(data);
            },
            url: '/deltakelse/register/oppgave/{oppgaveReferanse}/lukk',
            ...options,
        });
    }

    /**
     * Henter alle deltakelser for en deltaker i ungdomsprogrammet
     */
    public static hentAlleMineDeltakelser<ThrowOnError extends boolean = true>(
        options?: Options<HentAlleMineDeltakelserData, ThrowOnError>,
    ) {
        return (options?.client ?? _heyApiClient).get<
            HentAlleMineDeltakelserResponses,
            HentAlleMineDeltakelserErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentAlleMineDeltakelserResponse.parseAsync(data);
            },
            url: '/deltakelse/register/hent/alle',
            ...options,
        });
    }
}

export class LesRegisterDataService {
    /**
     * Hent alle deltakelser for en deltaker i ungdomsprogrammet
     */
    public static hentAlleDeltakelserGittDeltakerAktør<ThrowOnError extends boolean = true>(
        options: Options<HentAlleDeltakelserGittDeltakerAktørData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            HentAlleDeltakelserGittDeltakerAktørResponses,
            HentAlleDeltakelserGittDeltakerAktørErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentAlleDeltakelserGittDeltakerAktørResponse.parseAsync(data);
            },
            url: '/register/hent/alle',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class OppslagService {
    /**
     * Hent personalia for en deltaker
     */
    public static hentDeltakerInfoGittDeltaker<ThrowOnError extends boolean = true>(
        options: Options<HentDeltakerInfoGittDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            HentDeltakerInfoGittDeltakerResponses,
            HentDeltakerInfoGittDeltakerErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerResponse.parseAsync(data);
            },
            url: '/oppslag/deltaker',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Hent personlia for en deltaker gitt en UUID
     */
    public static hentDeltakerInfoGittDeltakerId<ThrowOnError extends boolean = true>(
        options: Options<HentDeltakerInfoGittDeltakerIdData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            HentDeltakerInfoGittDeltakerIdResponses,
            HentDeltakerInfoGittDeltakerIdErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerIdResponse.parseAsync(data);
            },
            url: '/oppslag/deltaker/{id}',
            ...options,
        });
    }
}

export class OppretterOgEndrerPåOppgaverService {
    /**
     * Setter oppgave til utløpt
     */
    public static utløperOppgave<ThrowOnError extends boolean = true>(
        options: Options<UtløperOppgaveData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<UtløperOppgaveResponses, UtløperOppgaveErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppgave/utløpt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Setter oppgave til utløpt for type og periode
     */
    public static utløperOppgaveForTypeOgPeriode<ThrowOnError extends boolean = true>(
        options: Options<UtløperOppgaveForTypeOgPeriodeData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            UtløperOppgaveForTypeOgPeriodeResponses,
            UtløperOppgaveForTypeOgPeriodeErrors,
            ThrowOnError
        >({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppgave/utløpt/forTypeOgPeriode',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Oppretter oppgave for kontroll av registerinntekt
     */
    public static opprettOppgaveForKontrollAvRegisterinntekt<ThrowOnError extends boolean = true>(
        options: Options<OpprettOppgaveForKontrollAvRegisterinntektData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            OpprettOppgaveForKontrollAvRegisterinntektResponses,
            OpprettOppgaveForKontrollAvRegisterinntektErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zOpprettOppgaveForKontrollAvRegisterinntektResponse.parseAsync(data);
            },
            url: '/oppgave/opprett/kontroll/registerinntekt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Oppretter oppgave for inntektsrapportering
     */
    public static opprettOppgaveForInntektsrapportering<ThrowOnError extends boolean = true>(
        options: Options<OpprettOppgaveForInntektsrapporteringData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            OpprettOppgaveForInntektsrapporteringResponses,
            OpprettOppgaveForInntektsrapporteringErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zOpprettOppgaveForInntektsrapporteringResponse.parseAsync(data);
            },
            url: '/oppgave/opprett/inntektsrapportering',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Oppretter oppgave for endret programperiode
     */
    public static opprettOppgaveForEndretProgramperiode<ThrowOnError extends boolean = true>(
        options: Options<OpprettOppgaveForEndretProgramperiodeData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            OpprettOppgaveForEndretProgramperiodeResponses,
            OpprettOppgaveForEndretProgramperiodeErrors,
            ThrowOnError
        >({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zOpprettOppgaveForEndretProgramperiodeResponse.parseAsync(data);
            },
            url: '/oppgave/opprett/endre/programperiode',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Avbryter oppgave
     */
    public static avbrytOppgave<ThrowOnError extends boolean = true>(
        options: Options<AvbrytOppgaveData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<AvbrytOppgaveResponses, AvbrytOppgaveErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppgave/avbryt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }
}

export class DeltakerService {
    /**
     * Henter kontonummer for en deltaker i ungdomsprogrammet
     */
    public static hentKontonummer<ThrowOnError extends boolean = true>(
        options?: Options<HentKontonummerData, ThrowOnError>,
    ) {
        return (options?.client ?? _heyApiClient).get<HentKontonummerResponses, HentKontonummerErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            responseValidator: async (data) => {
                return await zHentKontonummerResponse.parseAsync(data);
            },
            url: '/deltaker/hent-kontonummer',
            ...options,
        });
    }
}
