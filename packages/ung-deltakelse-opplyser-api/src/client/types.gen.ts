// This file is auto-generated by @hey-api/openapi-ts

export type ProblemDetail = {
    type?: string;
    title?: string;
    status?: number;
    detail?: string;
    instance?: string;
    properties?: {
        [key: string]: unknown;
    };
};

export type EndrePeriodeDatoDto = {
    dato: string;
};

export type DeltakelseDto = {
    id?: string;
    deltaker: DeltakerDto;
    fraOgMed: string;
    tilOgMed?: string;
    søktTidspunkt?: string;
};

export type DeltakerDto = {
    id?: string;
    deltakerIdent: string;
};

export type DeltakelseUtmeldingDto = {
    utmeldingsdato: string;
};

export type ArbeidOgFrilansRegisterInntektDto = {
    inntekt: number;
    arbeidsgiver: string;
    arbeidsgiverNavn?: string;
};

export type BekreftelseDto = {
    harUttalelse: boolean;
    uttalelseFraBruker?: string;
};

export type DeltakelseKomposittDto = {
    id?: string;
    deltaker: DeltakerDto;
    fraOgMed: string;
    tilOgMed?: string;
    søktTidspunkt?: string;
    oppgaver: Array<OppgaveDto>;
};

export type EndretSluttdatoDataDto = OppgavetypeDataDto & {
    nySluttdato: string;
    forrigeSluttdato?: string;
};

export type EndretStartdatoDataDto = OppgavetypeDataDto & {
    nyStartdato: string;
    forrigeStartdato: string;
};

export type InntektsrapporteringOppgavetypeDataDto = OppgavetypeDataDto & {
    fraOgMed: string;
    tilOgMed: string;
    rapportertInntekt?: RapportertInntektPeriodeinfoDto;
};

export type KontrollerRegisterinntektOppgavetypeDataDto = OppgavetypeDataDto & {
    fraOgMed: string;
    tilOgMed: string;
    registerinntekt: RegisterinntektDto;
};

export type OppgaveDto = {
    oppgaveReferanse: string;
    oppgavetype: Oppgavetype;
    oppgavetypeData:
        | EndretSluttdatoDataDto
        | EndretStartdatoDataDto
        | InntektsrapporteringOppgavetypeDataDto
        | KontrollerRegisterinntektOppgavetypeDataDto
        | SøkYtelseOppgavetypeDataDto;
    bekreftelse?: BekreftelseDto;
    status: OppgaveStatus;
    opprettetDato: string;
    løstDato?: string;
    åpnetDato?: string;
    lukketDato?: string;
    frist?: string;
};

export enum OppgaveStatus {
    LØST = 'LØST',
    ULØST = 'ULØST',
    AVBRUTT = 'AVBRUTT',
    UTLØPT = 'UTLØPT',
    LUKKET = 'LUKKET',
}

export enum Oppgavetype {
    BEKREFT_ENDRET_STARTDATO = 'BEKREFT_ENDRET_STARTDATO',
    BEKREFT_ENDRET_SLUTTDATO = 'BEKREFT_ENDRET_SLUTTDATO',
    BEKREFT_AVVIK_REGISTERINNTEKT = 'BEKREFT_AVVIK_REGISTERINNTEKT',
    RAPPORTER_INNTEKT = 'RAPPORTER_INNTEKT',
    SØK_YTELSE = 'SØK_YTELSE',
}

export type OppgavetypeDataDto = unknown;

export type RapportertInntektPeriodeinfoDto = {
    fraOgMed: string;
    tilOgMed: string;
    arbeidstakerOgFrilansInntekt?: number;
};

export type RegisterinntektDto = {
    arbeidOgFrilansInntekter: Array<ArbeidOgFrilansRegisterInntektDto>;
    ytelseInntekter: Array<YtelseRegisterInntektDto>;
    totalInntektArbeidOgFrilans: number;
    totalInntektYtelse: number;
    totalInntekt: number;
};

export type SøkYtelseOppgavetypeDataDto = OppgavetypeDataDto & {
    fomDato: string;
};

export type YtelseRegisterInntektDto = {
    inntekt: number;
    ytelsetype: YtelseType;
};

export enum YtelseType {
    SYKEPENGER = 'SYKEPENGER',
    OMSORGSPENGER = 'OMSORGSPENGER',
    PLEIEPENGER_SYKT_BARN = 'PLEIEPENGER_SYKT_BARN',
    PLEIEPENGER_LIVETS_SLUTTFASE = 'PLEIEPENGER_LIVETS_SLUTTFASE',
    OPPLAERINGSPENGER = 'OPPLAERINGSPENGER',
}

export type DeltakelseInnmeldingDto = {
    deltakerIdent: string;
    startdato: string;
};

export type AktørIdDto = {
    aktørId: string;
};

export type DeltakelseOpplysningerDto = {
    opplysninger: Array<DeltakelseDto>;
};

export type DeltakerPersonalia = {
    id?: string;
    deltakerIdent: string;
    navn: Navn;
    fødselsdato: string;
    /**
     * Diskresjonskoder som gjelder for deltakeren. Vil være tom hvis deltaker ikke har diskresjonskoder satt.
     */
    diskresjonskoder: Array<Diskresjonskode>;
    førsteMuligeInnmeldingsdato: string;
    sisteMuligeInnmeldingsdato: string;
};

export enum Diskresjonskode {
    KODE6 = 'KODE6',
    KODE7 = 'KODE7',
    SKJERMET = 'SKJERMET',
}

export type Navn = {
    fornavn: string;
    mellomnavn?: string;
    etternavn: string;
};

export type SettTilUtløptDto = {
    deltakerIdent: string;
    oppgavetype: Oppgavetype;
    fomDato: string;
    tomDato: string;
};

export type RegisterInntektArbeidOgFrilansDto = {
    beløp: number;
    arbeidsgiverIdent: string;
};

export type RegisterInntektDto = {
    registerinntekterForArbeidOgFrilans?: Array<RegisterInntektArbeidOgFrilansDto>;
    registerinntekterForYtelse?: Array<RegisterInntektYtelseDto>;
};

export type RegisterInntektOppgaveDto = {
    deltakerIdent: string;
    referanse: string;
    frist: string;
    fomDato: string;
    tomDato: string;
    registerInntekter: RegisterInntektDto;
};

export type RegisterInntektYtelseDto = {
    beløp: number;
    ytelseType: YtelseType;
};

export type InntektsrapporteringOppgaveDto = {
    deltakerIdent: string;
    referanse: string;
    frist: string;
    fomDato: string;
    tomDato: string;
};

export type EndretStartdatoOppgaveDto = {
    deltakerIdent: string;
    oppgaveReferanse: string;
    frist: string;
    nyStartdato: string;
    forrigeStartdato: string;
};

export type EndretSluttdatoOppgaveDto = {
    deltakerIdent: string;
    oppgaveReferanse: string;
    frist: string;
    nySluttdato: string;
    forrigeSluttdato?: string;
};

export type DeltakelseHistorikkDto = {
    tidspunkt: string;
    endringstype: Endringstype;
    revisjonstype: Revisjonstype;
    endring: string;
    aktør: string;
};

export enum Endringstype {
    DELTAKER_MELDT_INN = 'DELTAKER_MELDT_INN',
    ENDRET_STARTDATO = 'ENDRET_STARTDATO',
    ENDRET_SLUTTDATO = 'ENDRET_SLUTTDATO',
    DELTAKER_HAR_SØKT_YTELSE = 'DELTAKER_HAR_SØKT_YTELSE',
    UKJENT = 'UKJENT',
}

export enum Revisjonstype {
    OPPRETTET = 'OPPRETTET',
    ENDRET = 'ENDRET',
    SLETTET = 'SLETTET',
    UKJENT = 'UKJENT',
}

export type KontonummerDto = {
    harKontonummer: boolean;
    kontonummer?: string;
};

export type EndreStartdatoData = {
    body: EndrePeriodeDatoDto;
    path: {
        deltakelseId: string;
    };
    query?: never;
    url: '/veileder/register/deltakelse/{deltakelseId}/endre/startdato';
};

export type EndreStartdatoErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type EndreStartdatoError = EndreStartdatoErrors[keyof EndreStartdatoErrors];

export type EndreStartdatoResponses = {
    /**
     * OK
     */
    200: DeltakelseDto;
};

export type EndreStartdatoResponse = EndreStartdatoResponses[keyof EndreStartdatoResponses];

export type EndreSluttdatoData = {
    body: EndrePeriodeDatoDto;
    path: {
        deltakelseId: string;
    };
    query?: never;
    url: '/veileder/register/deltakelse/{deltakelseId}/endre/sluttdato';
};

export type EndreSluttdatoErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type EndreSluttdatoError = EndreSluttdatoErrors[keyof EndreSluttdatoErrors];

export type EndreSluttdatoResponses = {
    /**
     * OK
     */
    200: DeltakelseDto;
};

export type EndreSluttdatoResponse = EndreSluttdatoResponses[keyof EndreSluttdatoResponses];

export type MeldUtDeltakerData = {
    body: DeltakelseUtmeldingDto;
    path: {
        deltakelseId: string;
    };
    query?: never;
    url: '/veileder/register/deltakelse/{deltakelseId}/avslutt';
};

export type MeldUtDeltakerErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MeldUtDeltakerError = MeldUtDeltakerErrors[keyof MeldUtDeltakerErrors];

export type MeldUtDeltakerResponses = {
    /**
     * OK
     */
    200: DeltakelseDto;
};

export type MeldUtDeltakerResponse = MeldUtDeltakerResponses[keyof MeldUtDeltakerResponses];

export type MarkerDeltakelseSomSøktData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/deltakelse/register/{id}/marker-har-sokt';
};

export type MarkerDeltakelseSomSøktErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerDeltakelseSomSøktError = MarkerDeltakelseSomSøktErrors[keyof MarkerDeltakelseSomSøktErrors];

export type MarkerDeltakelseSomSøktResponses = {
    /**
     * OK
     */
    200: DeltakelseKomposittDto;
};

export type MarkerDeltakelseSomSøktResponse = MarkerDeltakelseSomSøktResponses[keyof MarkerDeltakelseSomSøktResponses];

export type MeldInnDeltakerData = {
    body: DeltakelseInnmeldingDto;
    path?: never;
    query?: never;
    url: '/veileder/register/deltaker/innmelding';
};

export type MeldInnDeltakerErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MeldInnDeltakerError = MeldInnDeltakerErrors[keyof MeldInnDeltakerErrors];

export type MeldInnDeltakerResponses = {
    /**
     * OK
     */
    200: DeltakelseDto;
};

export type MeldInnDeltakerResponse = MeldInnDeltakerResponses[keyof MeldInnDeltakerResponses];

export type HentAlleDeltakelserGittDeltakerAktørData = {
    body: AktørIdDto;
    path?: never;
    query?: never;
    url: '/register/hent/alle';
};

export type HentAlleDeltakelserGittDeltakerAktørErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentAlleDeltakelserGittDeltakerAktørError =
    HentAlleDeltakelserGittDeltakerAktørErrors[keyof HentAlleDeltakelserGittDeltakerAktørErrors];

export type HentAlleDeltakelserGittDeltakerAktørResponses = {
    /**
     * OK
     */
    200: DeltakelseOpplysningerDto;
};

export type HentAlleDeltakelserGittDeltakerAktørResponse =
    HentAlleDeltakelserGittDeltakerAktørResponses[keyof HentAlleDeltakelserGittDeltakerAktørResponses];

export type HentDeltakerInfoGittDeltakerData = {
    body: DeltakerDto;
    path?: never;
    query?: never;
    url: '/oppslag/deltaker';
};

export type HentDeltakerInfoGittDeltakerErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentDeltakerInfoGittDeltakerError =
    HentDeltakerInfoGittDeltakerErrors[keyof HentDeltakerInfoGittDeltakerErrors];

export type HentDeltakerInfoGittDeltakerResponses = {
    /**
     * OK
     */
    200: DeltakerPersonalia;
};

export type HentDeltakerInfoGittDeltakerResponse =
    HentDeltakerInfoGittDeltakerResponses[keyof HentDeltakerInfoGittDeltakerResponses];

export type UtløperOppgaveData = {
    body: string;
    path?: never;
    query?: never;
    url: '/oppgave/utlopt';
};

export type UtløperOppgaveErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type UtløperOppgaveError = UtløperOppgaveErrors[keyof UtløperOppgaveErrors];

export type UtløperOppgaveResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type UtløperOppgaveForTypeOgPeriodeData = {
    body: SettTilUtløptDto;
    path?: never;
    query?: never;
    url: '/oppgave/utlopt/forTypeOgPeriode';
};

export type UtløperOppgaveForTypeOgPeriodeErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type UtløperOppgaveForTypeOgPeriodeError =
    UtløperOppgaveForTypeOgPeriodeErrors[keyof UtløperOppgaveForTypeOgPeriodeErrors];

export type UtløperOppgaveForTypeOgPeriodeResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type OpprettOppgaveForKontrollAvRegisterinntektData = {
    body: RegisterInntektOppgaveDto;
    path?: never;
    query?: never;
    url: '/oppgave/opprett/kontroll/registerinntekt';
};

export type OpprettOppgaveForKontrollAvRegisterinntektErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type OpprettOppgaveForKontrollAvRegisterinntektError =
    OpprettOppgaveForKontrollAvRegisterinntektErrors[keyof OpprettOppgaveForKontrollAvRegisterinntektErrors];

export type OpprettOppgaveForKontrollAvRegisterinntektResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type OpprettOppgaveForKontrollAvRegisterinntektResponse =
    OpprettOppgaveForKontrollAvRegisterinntektResponses[keyof OpprettOppgaveForKontrollAvRegisterinntektResponses];

export type OpprettOppgaveForInntektsrapporteringData = {
    body: InntektsrapporteringOppgaveDto;
    path?: never;
    query?: never;
    url: '/oppgave/opprett/inntektsrapportering';
};

export type OpprettOppgaveForInntektsrapporteringErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type OpprettOppgaveForInntektsrapporteringError =
    OpprettOppgaveForInntektsrapporteringErrors[keyof OpprettOppgaveForInntektsrapporteringErrors];

export type OpprettOppgaveForInntektsrapporteringResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type OpprettOppgaveForInntektsrapporteringResponse =
    OpprettOppgaveForInntektsrapporteringResponses[keyof OpprettOppgaveForInntektsrapporteringResponses];

export type OpprettOppgaveForEndretStartdatoData = {
    body: EndretStartdatoOppgaveDto;
    path?: never;
    query?: never;
    url: '/oppgave/opprett/endret-startdato';
};

export type OpprettOppgaveForEndretStartdatoErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type OpprettOppgaveForEndretStartdatoError =
    OpprettOppgaveForEndretStartdatoErrors[keyof OpprettOppgaveForEndretStartdatoErrors];

export type OpprettOppgaveForEndretStartdatoResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type OpprettOppgaveForEndretStartdatoResponse =
    OpprettOppgaveForEndretStartdatoResponses[keyof OpprettOppgaveForEndretStartdatoResponses];

export type OpprettOppgaveForEndretSluttdatoData = {
    body: EndretSluttdatoOppgaveDto;
    path?: never;
    query?: never;
    url: '/oppgave/opprett/endret-sluttdato';
};

export type OpprettOppgaveForEndretSluttdatoErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type OpprettOppgaveForEndretSluttdatoError =
    OpprettOppgaveForEndretSluttdatoErrors[keyof OpprettOppgaveForEndretSluttdatoErrors];

export type OpprettOppgaveForEndretSluttdatoResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type OpprettOppgaveForEndretSluttdatoResponse =
    OpprettOppgaveForEndretSluttdatoResponses[keyof OpprettOppgaveForEndretSluttdatoResponses];

export type AvbrytOppgaveData = {
    body: string;
    path?: never;
    query?: never;
    url: '/oppgave/avbryt';
};

export type AvbrytOppgaveErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type AvbrytOppgaveError = AvbrytOppgaveErrors[keyof AvbrytOppgaveErrors];

export type AvbrytOppgaveResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type HentAlleDeltakelserGittDeltakerIdData = {
    body?: never;
    path: {
        deltakerId: string;
    };
    query?: never;
    url: '/veileder/register/deltaker/{deltakerId}/deltakelser';
};

export type HentAlleDeltakelserGittDeltakerIdErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentAlleDeltakelserGittDeltakerIdError =
    HentAlleDeltakelserGittDeltakerIdErrors[keyof HentAlleDeltakelserGittDeltakerIdErrors];

export type HentAlleDeltakelserGittDeltakerIdResponses = {
    /**
     * OK
     */
    200: Array<DeltakelseDto>;
};

export type HentAlleDeltakelserGittDeltakerIdResponse =
    HentAlleDeltakelserGittDeltakerIdResponses[keyof HentAlleDeltakelserGittDeltakerIdResponses];

export type DeltakelseHistorikkData = {
    body?: never;
    path: {
        deltakelseId: string;
    };
    query?: never;
    url: '/veileder/register/deltakelse/{deltakelseId}/historikk';
};

export type DeltakelseHistorikkErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type DeltakelseHistorikkError = DeltakelseHistorikkErrors[keyof DeltakelseHistorikkErrors];

export type DeltakelseHistorikkResponses = {
    /**
     * OK
     */
    200: Array<DeltakelseHistorikkDto>;
};

export type DeltakelseHistorikkResponse = DeltakelseHistorikkResponses[keyof DeltakelseHistorikkResponses];

export type HentDeltakerInfoGittDeltakerIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/oppslag/deltaker/{id}';
};

export type HentDeltakerInfoGittDeltakerIdErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentDeltakerInfoGittDeltakerIdError =
    HentDeltakerInfoGittDeltakerIdErrors[keyof HentDeltakerInfoGittDeltakerIdErrors];

export type HentDeltakerInfoGittDeltakerIdResponses = {
    /**
     * OK
     */
    200: DeltakerPersonalia;
};

export type HentDeltakerInfoGittDeltakerIdResponse =
    HentDeltakerInfoGittDeltakerIdResponses[keyof HentDeltakerInfoGittDeltakerIdResponses];

export type HentKontonummerData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/deltaker/hent-kontonummer';
};

export type HentKontonummerErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentKontonummerError = HentKontonummerErrors[keyof HentKontonummerErrors];

export type HentKontonummerResponses = {
    /**
     * OK
     */
    200: KontonummerDto;
};

export type HentKontonummerResponse = HentKontonummerResponses[keyof HentKontonummerResponses];

export type HentDeltakersOppgaveData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}';
};

export type HentDeltakersOppgaveErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentDeltakersOppgaveError = HentDeltakersOppgaveErrors[keyof HentDeltakersOppgaveErrors];

export type HentDeltakersOppgaveResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type HentDeltakersOppgaveResponse = HentDeltakersOppgaveResponses[keyof HentDeltakersOppgaveResponses];

export type MarkerOppgaveSomLøstData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/løst';
};

export type MarkerOppgaveSomLøstErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomLøstError = MarkerOppgaveSomLøstErrors[keyof MarkerOppgaveSomLøstErrors];

export type MarkerOppgaveSomLøstResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomLøstResponse = MarkerOppgaveSomLøstResponses[keyof MarkerOppgaveSomLøstResponses];

export type MarkerOppgaveSomLukketData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/lukk';
};

export type MarkerOppgaveSomLukketErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomLukketError = MarkerOppgaveSomLukketErrors[keyof MarkerOppgaveSomLukketErrors];

export type MarkerOppgaveSomLukketResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomLukketResponse = MarkerOppgaveSomLukketResponses[keyof MarkerOppgaveSomLukketResponses];

export type MarkerOppgaveSomÅpnetData = {
    body?: never;
    path: {
        oppgaveReferanse: string;
    };
    query?: never;
    url: '/deltakelse/register/oppgave/{oppgaveReferanse}/apnet';
};

export type MarkerOppgaveSomÅpnetErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type MarkerOppgaveSomÅpnetError = MarkerOppgaveSomÅpnetErrors[keyof MarkerOppgaveSomÅpnetErrors];

export type MarkerOppgaveSomÅpnetResponses = {
    /**
     * OK
     */
    200: OppgaveDto;
};

export type MarkerOppgaveSomÅpnetResponse = MarkerOppgaveSomÅpnetResponses[keyof MarkerOppgaveSomÅpnetResponses];

export type HentAlleMineDeltakelserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/deltakelse/register/hent/alle';
};

export type HentAlleMineDeltakelserErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type HentAlleMineDeltakelserError = HentAlleMineDeltakelserErrors[keyof HentAlleMineDeltakelserErrors];

export type HentAlleMineDeltakelserResponses = {
    /**
     * OK
     */
    200: Array<DeltakelseKomposittDto>;
};

export type HentAlleMineDeltakelserResponse = HentAlleMineDeltakelserResponses[keyof HentAlleMineDeltakelserResponses];

export type FjernFraProgramData = {
    body?: never;
    path: {
        deltakerId: string;
    };
    query?: never;
    url: '/veileder/register/deltaker/{deltakerId}/fjern';
};

export type FjernFraProgramErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetail;
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type FjernFraProgramError = FjernFraProgramErrors[keyof FjernFraProgramErrors];

export type FjernFraProgramResponses = {
    /**
     * No Content
     */
    204: void;
};

export type FjernFraProgramResponse = FjernFraProgramResponses[keyof FjernFraProgramResponses];

export type ClientOptions = {
    baseURL: 'https://ung-deltakelse-opplyser.intern.dev.nav.no' | (string & {});
};
