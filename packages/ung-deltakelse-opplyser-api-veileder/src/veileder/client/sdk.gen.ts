// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type {
    EndreStartdatoData,
    EndreStartdatoResponses,
    EndreStartdatoErrors,
    EndreSluttdatoData,
    EndreSluttdatoResponses,
    EndreSluttdatoErrors,
    MeldUtDeltakerData,
    MeldUtDeltakerResponses,
    MeldUtDeltakerErrors,
    MeldInnDeltakerData,
    MeldInnDeltakerResponses,
    MeldInnDeltakerErrors,
    HentDeltakerInfoGittDeltakerData,
    HentDeltakerInfoGittDeltakerResponses,
    HentDeltakerInfoGittDeltakerErrors,
    HentAlleDeltakelserGittDeltakerIdData,
    HentAlleDeltakelserGittDeltakerIdResponses,
    HentAlleDeltakelserGittDeltakerIdErrors,
    DeltakelseHistorikkData,
    DeltakelseHistorikkResponses,
    DeltakelseHistorikkErrors,
    HentDeltakerInfoGittDeltakerIdData,
    HentDeltakerInfoGittDeltakerIdResponses,
    HentDeltakerInfoGittDeltakerIdErrors,
    FjernFraProgramData,
    FjernFraProgramResponses,
    FjernFraProgramErrors,
} from './types.gen';
import { client as _heyApiClient } from './client.gen';
import {
    zDeltakelseHistorikkData,
    zDeltakelseHistorikkResponse,
    zEndreSluttdatoData,
    zEndreSluttdatoResponse,
    zEndreStartdatoData,
    zEndreStartdatoResponse,
    zFjernFraProgramData,
    zFjernFraProgramResponse,
    zHentAlleDeltakelserGittDeltakerIdData,
    zHentAlleDeltakelserGittDeltakerIdResponse,
    zHentDeltakerInfoGittDeltakerData,
    zHentDeltakerInfoGittDeltakerIdData,
    zHentDeltakerInfoGittDeltakerIdResponse,
    zHentDeltakerInfoGittDeltakerResponse,
    zMeldInnDeltakerData,
    zMeldInnDeltakerResponse,
    zMeldUtDeltakerData,
    zMeldUtDeltakerResponse,
} from './zod.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<
    TData,
    ThrowOnError
> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Veileder {
    /**
     * Endrer startdato på en deltakelse i ungdomsprogrammet
     */
    public static endreStartdato<ThrowOnError extends boolean = true>(
        options: Options<EndreStartdatoData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<EndreStartdatoResponses, EndreStartdatoErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zEndreStartdatoData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zEndreStartdatoResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltakelse/{deltakelseId}/endre/startdato',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Endrer startdato på en deltakelse i ungdomsprogrammet
     */
    public static endreSluttdato<ThrowOnError extends boolean = true>(
        options: Options<EndreSluttdatoData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<EndreSluttdatoResponses, EndreSluttdatoErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zEndreSluttdatoData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zEndreSluttdatoResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltakelse/{deltakelseId}/endre/sluttdato',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Avslutter en deltakelse i ungdomsprogrammet
     */
    public static meldUtDeltaker<ThrowOnError extends boolean = true>(
        options: Options<MeldUtDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).put<MeldUtDeltakerResponses, MeldUtDeltakerErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zMeldUtDeltakerData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zMeldUtDeltakerResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltakelse/{deltakelseId}/avslutt',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Meld inn en deltaker i ungdomsprogrammet.
     */
    public static meldInnDeltaker<ThrowOnError extends boolean = true>(
        options: Options<MeldInnDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<MeldInnDeltakerResponses, MeldInnDeltakerErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zMeldInnDeltakerData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zMeldInnDeltakerResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltaker/innmelding',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Hent alle deltakelser for en deltaker i ungdomsprogrammet
     */
    public static hentAlleDeltakelserGittDeltakerId<ThrowOnError extends boolean = true>(
        options: Options<HentAlleDeltakelserGittDeltakerIdData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            HentAlleDeltakelserGittDeltakerIdResponses,
            HentAlleDeltakelserGittDeltakerIdErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zHentAlleDeltakelserGittDeltakerIdData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zHentAlleDeltakelserGittDeltakerIdResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltaker/{deltakerId}/deltakelser',
            ...options,
        });
    }

    public static deltakelseHistorikk<ThrowOnError extends boolean = true>(
        options: Options<DeltakelseHistorikkData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            DeltakelseHistorikkResponses,
            DeltakelseHistorikkErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zDeltakelseHistorikkData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zDeltakelseHistorikkResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltakelse/{deltakelseId}/historikk',
            ...options,
        });
    }

    /**
     * Fjern en deltaker fra ungdomsprogrammet
     */
    public static fjernFraProgram<ThrowOnError extends boolean = true>(
        options: Options<FjernFraProgramData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).delete<FjernFraProgramResponses, FjernFraProgramErrors, ThrowOnError>({
            requestValidator: async (data) => {
                return await zFjernFraProgramData.parseAsync(data);
            },
            responseValidator: async (data) => {
                return await zFjernFraProgramResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/veileder/register/deltaker/{deltakerId}/fjern',
            ...options,
        });
    }
}

export class Oppslag {
    /**
     * Hent personalia for en deltaker
     */
    public static hentDeltakerInfoGittDeltaker<ThrowOnError extends boolean = true>(
        options: Options<HentDeltakerInfoGittDeltakerData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).post<
            HentDeltakerInfoGittDeltakerResponses,
            HentDeltakerInfoGittDeltakerErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppslag/deltaker',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers,
            },
        });
    }

    /**
     * Hent personlia for en deltaker gitt en UUID
     */
    public static hentDeltakerInfoGittDeltakerId<ThrowOnError extends boolean = true>(
        options: Options<HentDeltakerInfoGittDeltakerIdData, ThrowOnError>,
    ) {
        return (options.client ?? _heyApiClient).get<
            HentDeltakerInfoGittDeltakerIdResponses,
            HentDeltakerInfoGittDeltakerIdErrors,
            ThrowOnError
        >({
            requestValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerIdData.parseAsync(data);
            },
            responseType: 'json',
            responseValidator: async (data) => {
                return await zHentDeltakerInfoGittDeltakerIdResponse.parseAsync(data);
            },
            security: [
                {
                    scheme: 'bearer',
                    type: 'http',
                },
                {
                    scheme: 'bearer',
                    type: 'http',
                },
            ],
            url: '/oppslag/deltaker/{id}',
            ...options,
        });
    }
}
