name: Deploy til dev

on:
  workflow_dispatch:
      inputs:
          working-directory:
              description: Working directory
              type: string
              required: true
          app-name:
              description: Name of application
              type: string
              required: true
      secrets:
          NAIS_DEPLOY_APIKEY:
              description: Nais deploy APIKEY
              required: false

env:
    IMAGE: ghcr.io/${{ github.repository }}/${{ inputs.app-name }}-mono:${{ github.sha }}
    GITHUB_USERNAME: x-access-token
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    deploy-to-dev:
        name: Deploy to DEV
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 2
            - name: Setup Node.js environment
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  cache: 'yarn'
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v3
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn install

            - name: Run tests
              run: yarn test --maxWorkers=2

            - name: Build
              run: |
                yarn build-package
                yarn build-app

            - name: Build and publish Docker image
              run: |
                  docker build -t ${IMAGE} -f ${{inputs.working-directory}}/Dockerfile .
                  docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
                  docker push ${IMAGE}

            - name: Deploye til dev
              uses: nais/deploy/actions/deploy@v1
              env:
                  CLUSTER: dev-fss
                  RESOURCE: config/nais.yml
                  VARS: config/${{ inputs.app-name }}/dev-gcp.json
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
